{"version":3,"sources":["redux/actions.js","components/Home/Atoms/Footer.js","components/Styles.jsx","components/Home/Home.jsx","components/Head/PositiveHead.jsx","components/Poll/Body/Title.jsx","components/Poll/Body/PrimaryDialog/PrimaryDialog.jsx","components/Poll/Body/SecondaryDialog/SecondaryDialog.jsx","components/Poll/Body/ListQuestions/ListQuestions.jsx","components/Poll/Body/Questions.jsx","redux/Socket.js","components/Poll/Body/ParticipantsTune.jsx","components/Poll/Poll.jsx","components/Head/LivePollHead.jsx","components/Head/Notification/Notification.jsx","components/Head/LiveHead.jsx","components/Live/ListPoll/ListPoll.jsx","components/Live/ListLiveQuestionsResult/ListLiveQuestionsResult.jsx","components/Live/LiveFeed.jsx","components/Live/MainSurvey/ListToAnswerQuestions/ListToAnswerQuestions.jsx","components/Live/MainSurvey/MainSurvey.jsx","components/Live/ParticipantsPortal/ListParticipants/ListParticipants.jsx","components/Live/ParticipantsPortal/ParticipantsPortal.jsx","components/Live/ParticipantsInvitation/ListRequestedParticipants/ListRequestedParticipants.jsx","components/Live/ParticipantsInvitation/ListAddedParticipants/ListAddedParticipants.jsx","components/Live/ParticipantsInvitation/ParticipantsInvitation.jsx","components/Live/LivePoll.jsx","App.jsx","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["switchPage","page","type","payload","toggleDialog","surface","dialogSwitch","updateParticipants","list","updatePseudonym","pseudonym","updateQ","style","backgroundColor","textAlign","padding","position","left","bottom","height","width","phantom","display","Footer","_ref","children","react_default","a","createElement","Transition","React","forwardRef","props","ref","Slide","Object","assign","direction","GreenRadio","withStyles","root","color","green","&$checked","checked","Radio","RedRadio","red","Centered","styled","justifyContent","alignItems","Rightened","float","ValidationTextField","& input:valid + fieldset","borderColor","borderWidth","& input:invalid + fieldset","& input:valid:focus + fieldset","borderLeftWidth","TextField","useStyles","makeStyles","theme","margin","spacing","flexWrap","progress","HomeE","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkPseudonym","state","setState","inProgress","isDisable","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","check","flag","isAvailable","event","target","value","_this2","classes","onPage","react_router","to","id","className","Button","onClick","Assignment_default","fontSize","rel","href","ErrorOutline_default","noValidate","fullWidth","onChange","e","changePseudonym","label","required","variant","defaultValue","block","paddingTop","size","disabled","CircularProgress","Atoms_Footer","Date","getFullYear","fontWeight","Component","ConnectedLayer","connect","objectSpread","dispatch","rootReducer","Home_HomeE","HomeIcon","SvgIcon","d","iconHover","&:hover","icon","title","flexGrow","warn","PositiveHead","participantNotify","handleHomeClick","warnClick","warning","AppBar","Toolbar","PositiveHead_HomeIcon","Dialog","open","TransitionComponent","keepMounted","aria-labelledby","DialogActions","DialogContentText","Typography","Grid","item","xs","ThreeSixty_default","palette","background","paper","fontFamily","Title","Paper","heading","createMuiTheme","overrides","MuiButton","PrimaryDialog","isPrimaryOpen","onClose","MuiThemeProvider","SecondaryDialog","changeAsk","ask","isSecondaryOpen","DialogContent","multiline","rowsMax","autoFocus","updatePollQuestions","formControl","group","message","snacker","secondary","main","ListQuestions","listQnP","removeItem","map","data","i","key","ListItem","SnackbarContent","aria-describedby","IconButton","aria-label","Delete_default","Divider","button","rightIcon","marginLeft","fab","Questions","myref","space","listQnPLength","Fragment","List","component","Body_ListQuestions_ListQuestions","Fab","Add_default","Body_PrimaryDialog_PrimaryDialog","Body_SecondaryDialog_SecondaryDialog","bind","Icon","Socket","socket","io","on","eventName","callback","emit","removeListener","initialState","tempTotalParticipants","ParticipantsTuneE","localStorage","getItem","parse","setItem","totalParticipants","updateAdmin","isSecure","secureState","questions","_this3","handleParticipants","textField","InputLabelProps","shrink","FormGroup","FormControlLabel","control","Switch","toggleSwitch","handleFinal","buttonDone","marginRight","maxlength","ParticipantsTune","ParticipantsTune_ParticipantsTuneE","PollE","myRef","createRef","window","scrollTo","offsetTop","question","prevQ","push","isHomeClick","Head_PositiveHead","Body_Title","Body_Questions","length","Body_ParticipantsTune","index","_useStyletron","useStyletron","_useStyletron2","slicedToArray","useCss","sizing","scale1200","Poll_PollE","LivePollHead","LivePollHead_HomeIcon","Notification","Badge","invisible","AccountCircle_default","LiveHead","isAdmin","LiveHead_HomeIcon","Head_Notification_Notification","extendedIcon","ListPoll","polls","keys","fillResult","total","yes","no","labels","datasets","hoverBackgroundColor","ListLiveQuestionsResultE","react_chartjs_2_es","liveFeedUpdate","primary","ListLiveQuestionsResult","_ref2","ListLiveQuestionsResult_ListLiveQuestionsResultE","LiveFeed","handleLiveFeed","Head_LiveHead","Live_ListLiveQuestionsResult_ListLiveQuestionsResult","ListToAnswerQuestions","handleRadio","FormControl","RadioGroup","row","labelPlacement","MainSurvey","handleInitialSubmit","Head_LivePollHead","MainSurvey_ListToAnswerQuestions_ListToAnswerQuestions","ListParticipants","listParticipants","updateInvite","Chip","concat","Number","ParticipantsPortalE","tempParticipantName","name","ParticipantsPortal_ListParticipants_ListParticipants","wantParticipant","tempChangeName","disableCurrentParticipant","currentParticipantClickSerial","maxWidth","ParticipantsPortal","ParticipantsPortal_ParticipantsPortalE","polulate","dummyData","isAdded","unit","PersonAddDisabled_default","PersonAdd_default","DoneOutline_default","ParticipantsInvitation","ListRequestedParticipants","ListAddedParticipants","LivePollE","pollResult","submit","tempResult","CssBaseline","Container","Live_ListPoll_ListPoll","Live_ParticipantsInvitation_ParticipantsInvitation","Live_ParticipantsPortal_ParticipantsPortal","Live_MainSurvey_MainSurvey","Live_LiveFeed","want","idx","arguments","undefined","LivePoll_LivePollE","App","attachSocketListeners","handleLiveFeedUpdate","handleNewPolls","indexOf","updateLivePolls","updatePollResult","updateLiveFeed","react_router_dom","path","components_Home_Home","exact","components_Poll_Poll","Live_LivePoll","Boolean","location","hostname","match","merge","prev","next","participantName","password","handleSubmit","action","handleToggle","handleWarningClick","reducer","combineReducers","update","newQ","splice","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","engine","Styletron","ReactDOM","render","es","integration_react","loading","browser_es5_es","debug","debugAfterHydration","baseui","LightTheme","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb04a527.chunk.js","sourcesContent":["\r\n\r\n// action creators\r\nexport const handleHomeClick = () => ({\r\n  type: 'HOME_CLICK',\r\n})\r\nexport const handleWarningClick = newContact => ({\r\n  type: 'CLICK_WARN',\r\n  payload: newContact,\r\n})\r\nexport const handleLiveFeedUpdate = data => ({\r\n  type: 'LIVE_FEED_UPDATE',\r\n  payload: data,\r\n})\r\nexport const removeItem = (surface, index) => ({\r\n  type: 'REMOVE_ITEM',\r\n  payload: {surface, index}\r\n})\r\nexport const submit = pollResult => ({\r\n  type: 'SUBMIT',\r\n  payload: pollResult,\r\n})\r\nexport const switchPage = page => ({\r\n  type: 'SWITCH_PAGE',\r\n  payload: page\r\n})\r\nexport const toggleDialog = (surface, dialogSwitch) => ({\r\n  type: 'TOGGLE_DIALOG',\r\n  payload: {surface, dialogSwitch}\r\n})\r\nexport const toggleSwitch = () => ({\r\n  type: 'TOGGLE_SWITCH'\r\n})\r\nexport const updateAdmin = (total) => ({\r\n  type: 'UPDATE_ADMIN',\r\n  payload: total,\r\n})\r\nexport const updateInvite = (want, idx='') => ({\r\n  type: 'UPDATE_INVITE_SWITCHES',\r\n  payload: {want: want, idx: idx},\r\n})\r\nexport const updateLiveFeed = (feed) => ({\r\n  type: 'UPDATE_FEED',\r\n  payload: feed,\r\n})\r\nexport const updateLivePolls = (polls) => ({\r\n  type: 'LIVE_POLLS',\r\n  payload: polls,\r\n})\r\nexport const updateParticipants = list => ({\r\n  type: 'UPDATE_LIST',\r\n  payload: list,\r\n})\r\nexport const updatePollResult = result => ({\r\n  type: 'POLLRESULT',\r\n  payload: result\r\n})\r\nexport const updatePseudonym = (pseudonym) => ({\r\n  type: 'PSEUDONYM',\r\n  payload: pseudonym,\r\n})\r\nexport const updateQ = list => ({\r\n  type: 'UPDATE_Q',\r\n  payload: list,\r\n})\r\nexport const warnClick = () => ({\r\n  type: 'WARN_CLICK',\r\n})\r\n\r\n\r\n\r\n\r\n// async action creator\r\n/*export const logInUser = (username, password) => async dispatch => {\r\n  dispatch({type: LOG_IN_SENT})\r\n  try {\r\n    const token = await login(username, password)\r\n    dispatch({type: LOG_IN_FULFILLED, payload: token})\r\n  } catch (err) {\r\n    dispatch({type: LOG_IN_REJECTED, payload: err.message})\r\n  }\r\n}*/\r\n","import React from 'react';\r\n\r\nvar style = {\r\n    backgroundColor: \"white\",\r\n    textAlign: \"center\",\r\n    padding: \"20px\",\r\n    position: \"fixed\",\r\n    left: \"0\",\r\n    bottom: \"0\",\r\n    height: \"60px\",\r\n    width: \"100%\",\r\n}\r\n\r\nvar phantom = {\r\n  display: 'block',\r\n  padding: '20px',\r\n  height: '60px',\r\n  width: '100%',\r\n}\r\n\r\nconst Footer = ({ children }) => {\r\n    return (\r\n        <div>\r\n            <div style={phantom} />\r\n            <div style={style}>\r\n                { children }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport {styled} from 'baseui';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green, red } from '@material-ui/core/colors';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nexport const Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const GreenRadio = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})(props => <Radio color=\"default\" {...props} />);\r\n\r\nexport const RedRadio = withStyles({\r\n  root: {\r\n    color: red[400],\r\n    '&$checked': {\r\n      color: red[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})(props => <Radio color=\"default\" {...props} />);\r\n\r\nexport const Centered = styled('div', {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '100%',\r\n});\r\n\r\nexport const Rightened = styled('div', {\r\n  display: 'flex',\r\n  float: 'right',\r\n  height: '100%',\r\n});\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Footer from './Atoms/Footer';\r\nimport './Home.css';\r\nimport {Centered, Rightened} from  '../Styles.jsx';\r\nimport {switchPage, updatePseudonym} from '../../redux/actions';\r\n\r\nimport {Block} from 'baseui/block';\r\n\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:valid + fieldset': {\r\n      borderColor: 'green',\r\n      borderWidth: 2,\r\n    },\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'red',\r\n      borderWidth: 2,\r\n    },\r\n    '& input:valid:focus + fieldset': {\r\n      borderLeftWidth: 6,\r\n      padding: '4px !important', // override inline-style\r\n    },\r\n  },\r\n})(TextField);\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nclass HomeE extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pseudonym: this.props.pseudonym,\r\n      inProgress: false,\r\n      isDisable: false,\r\n    }\r\n  }\r\n  changePseudonym(event) {\r\n    this.setState({pseudonym: event.target.value});     \r\n  }\r\n  checkPseudonym = () => {\r\n    if(this.state.pseudonym) {\r\n      this.setState({inProgress: true, isDisable: true});\r\n      fetch('https://n-ivehement.herokuapp.com/pseudonym', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          pseudonym: this.state.pseudonym\r\n        })\r\n      })\r\n        .then(response => response.json())\r\n        .then(check => {\r\n            let flag = 0;\r\n            this.setState({inProgress: false, isDisable: false}, () => {\r\n              if(check.isAvailable)\r\n                flag = 1;\r\n            })\r\n            if(flag) { \r\n              this.props.updatePseudonym(this.state.pseudonym);\r\n              return this.props.switchPage(1);}\r\n          }\r\n        )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    if(this.props.onPage === 1) return <Redirect to={'/unique'} />\r\n    else if(this.props.onPage === -1) return <Redirect to={'/live'} />\r\n\r\n\r\n    return (\r\n      <div id=\"home\" className=\"container\">\r\n        <ButtonMaterialUI onClick={() => this.props.switchPage(-1)}>\r\n            <AssignmentIcon\r\n                style={{ fontSize: 30, color: 'green' }} />\r\n                \r\n            \r\n        </ButtonMaterialUI>\r\n\r\n        <Rightened>\r\n        <ButtonMaterialUI>\r\n        \r\n          <a style={{display: \"table-cell\"}}  rel=\"noopener noreferrer\" href=\"https://github.com/jvoltci/aire/blob/master/README.md\" target=\"_blank\">\r\n              <ErrorOutlineIcon/>\r\n          </a>\r\n        \r\n        </ButtonMaterialUI>\r\n        </Rightened>\r\n\r\n        <h3 id=\"u1\">\r\n          <span id=\"u11\">a</span>\r\n          <span id=\"u12\">i</span>\r\n          <span id=\"u13\">r</span>\r\n          <span id=\"u14\">e</span>\r\n        </h3>\r\n\r\n        <div className={classes.root} noValidate>\r\n          <ValidationTextField fullWidth\r\n            onChange={(e) => this.changePseudonym(e)}\r\n            className={classes.margin}\r\n            label=\"Survey name\"\r\n            required\r\n            variant=\"outlined\"\r\n            defaultValue={this.props.pseudonym}\r\n            id=\"validation-outlined-input\"\r\n          />\r\n        </div>\r\n\r\n        <Centered>\r\n          <Block paddingTop=\"210px\" />\r\n          <ButtonMaterialUI size=\"large\" \r\n            disabled={this.state.isDisable}\r\n            color=\"primary\" \r\n            variant=\"contained\" \r\n            onClick={() => this.checkPseudonym()}\r\n            >\r\n            Lets Get Started\r\n          </ButtonMaterialUI>\r\n        </Centered>\r\n        <Block />\r\n        {\r\n            this.state.inProgress ?\r\n\r\n            \r\n              <Centered>\r\n                <CircularProgress className={classes.progress} />\r\n              </Centered>\r\n             :\r\n\r\n            null\r\n          }\r\n        <Footer>\r\n          ©{(new Date()).getFullYear()}\r\n        <span>&nbsp;Copyright: &nbsp;</span> \r\n        <a style={{fontWeight: 'bold', color: 'black'}} target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ivehement.wordpress.com\">IVehement, Inc.</a>\r\n        </Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  switchPage: (payload) => dispatch(switchPage(payload)),\r\n  updatePseudonym: (payload) => dispatch(updatePseudonym(payload)),\r\n});\r\n\r\nconst Home = ({rootReducer, switchPage, updatePseudonym}) => {\r\n  const classes = useStyles();\r\n  return(\r\n    <HomeE\r\n    classes={classes}\r\n    onPage={rootReducer.onPage}\r\n    pseudonym={rootReducer.pseudonym}\r\n    switchPage={switchPage}\r\n    updatePseudonym={updatePseudonym}\r\n    />\r\n  )\r\n}\r\n\r\nconst ConnectedLayer = connect(mapStateToProps, mapDispatchToProps)(Home);\r\nexport default ConnectedLayer;","import React from 'react';\r\n\r\nimport {Transition} from  '../Styles.jsx';\r\n\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ThreeSixtyIcon from '@material-ui/icons/ThreeSixty';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst HomeIcon = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nconst PositiveHead = ({ participantNotify, handleHomeClick, toggleDialog, warnClick, warning, onPage, switchPage }) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                    <ButtonMaterialUI onClick={() => handleHomeClick()}>\r\n                        <HomeIcon \r\n                            className={classes.iconHover} \r\n                            style={{ fontSize: 30, color:'#03fc98' }} />\r\n                    </ButtonMaterialUI>\r\n                <Dialog\r\n                    open={warning}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                >\r\n                    <DialogActions>\r\n                        <DialogContentText>\r\n                            <span className={classes.warn}>\r\n                                Are you sure?\r\n                            </span>\r\n                        </DialogContentText>\r\n                        <ButtonMaterialUI \r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => toggleDialog(\"warn\", false)}\r\n                        >\r\n                        Cancel\r\n                        </ButtonMaterialUI>\r\n                        <ButtonMaterialUI\r\n                        onClick={() => {\r\n                          warnClick();\r\n                        }}\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        >\r\n                        Confirm\r\n                        </ButtonMaterialUI>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                \r\n\r\n\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    &nbsp; aire\r\n                </Typography>\r\n                {\r\n                    onPage === 2?\r\n\r\n                    <ButtonMaterialUI onClick={() => {\r\n                        if(onPage !== 1)\r\n                            switchPage(onPage-1)\r\n                    }}>\r\n                        <Grid item xs={8}>\r\n                            <ThreeSixtyIcon \r\n                                className={classes.icon}\r\n                                style={{color:'#03fc98'}}\r\n                            />\r\n                        </Grid>\r\n                    </ButtonMaterialUI> :\r\n\r\n                    null\r\n                }\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n       \r\n    }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    '&:hover': {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(0),\r\n    fontSize: 30,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  warn: `\r\n    color: red;\r\n    padding: 0 30px;\r\n  `,\r\n}));\r\n\r\nexport default PositiveHead;","import React from 'react';\r\n\r\nimport {Centered} from  '../../Styles.jsx';\r\n\r\nimport {Block} from 'baseui/block';\r\nimport {Heading, HeadingLevel} from 'baseui/heading';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst Title = ({pseudonym}) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <Paper>\r\n            <Centered>\r\n\r\n                <Block paddingTop=\"100px\" />\r\n\r\n                <HeadingLevel>\r\n                    <HeadingLevel>\r\n                        <Heading>\r\n                            <Typography className={classes.pseudonym}>\r\n                                {pseudonym}\r\n                            </Typography>\r\n                        \r\n                        </Heading>\r\n                    </HeadingLevel>\r\n                </HeadingLevel>\r\n\r\n            </Centered>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pseudonym: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: \"teal\",\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"3.7rem\"\r\n  }\r\n}));\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        fontSize: '1rem',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass PrimaryDialog extends React.Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Dialog\r\n\t\t        open={this.props.isPrimaryOpen}\r\n\t\t        TransitionComponent={Transition}\r\n\t\t        keepMounted\r\n\t\t        onClose={() => {\r\n\t\t          this.props.toggleDialog(\"primary\", false);\r\n\t\t        }}\r\n\t\t        aria-labelledby=\"alert-dialog-slide-title\"\r\n\t\t    >\r\n\t\t    \t<DialogActions>\r\n\t\t    \t\t<MuiThemeProvider theme={theme}>\r\n\r\n\t\t    \t\t\t<Button \r\n\t\t\t          \tcolor=\"primary\"\r\n\t\t\t          \tvariant=\"contained\"\r\n\t\t\t          \t>\r\n\t\t\t            Question\r\n\t\t\t          \t</Button>\r\n\r\n\t\t\t          \t<Button\r\n\t\t\t          \tonClick={() => {\r\n\t\t\t              this.props.toggleDialog(\"primary\", false);\r\n\t\t\t              this.props.toggleDialog(\"secondary\", true);\r\n\t\t\t            }}\r\n\t\t\t            color=\"primary\"\r\n\t\t\t            variant=\"contained\"\r\n\t\t\t            >\r\n\t\t\t            Poll\r\n\t\t\t          \t</Button>\r\n\t\t\t          \t\r\n    \t\t\t\t</MuiThemeProvider>\r\n\t\t        </DialogActions>\r\n\t\t    </Dialog>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default PrimaryDialog;","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nclass SecondaryDialog extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\task: ''\r\n\t\t}\r\n\t}\r\n\tchangeAsk = (event) => {\r\n\t\tthis.setState({ask: event.target.value})\r\n\t}\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t\r\n\r\n\t\t    <Dialog fullWidth open={this.props.isSecondaryOpen} onClose={() => {\r\n\t\t          this.props.toggleDialog(\"secondary\", false);\r\n\t\t        }} \r\n\t\t        aria-labelledby=\"form-dialog-title\">\r\n\t\t        <DialogContent>\r\n\t\t          <TextField\r\n\t\t\t        id=\"outlined-multiline-flexible\"\r\n\t\t\t        label=\"Questionnaire\"\r\n\t\t\t        multiline\r\n\t\t\t        rowsMax=\"4\"\r\n\t\t\t        onChange={(e) => this.changeAsk(e)}\r\n\t\t\t        margin=\"normal\"\r\n\t\t\t        variant=\"outlined\"\r\n\t\t\t        autoFocus\r\n\t\t\t      />\r\n\t\t        </DialogContent>\r\n\t\t        <DialogActions>\r\n\t\t          <Button onClick={() => this.props.toggleDialog(\"secondary\", false)} color=\"primary\">\r\n\t\t            Cancel\r\n\t\t          </Button>\r\n\t\t          <Button onClick={() => \r\n\t\t          \t\t\t{\r\n\t\t          \t\t\t\tthis.props.toggleDialog(\"secondary\", false);\r\n\t\t          \t\t\t\tthis.props.updatePollQuestions(this.state.ask);\r\n\t\t          \t\t\t}}\r\n\t\t          \t\t\tcolor=\"primary\"\r\n\t\t          \t\t\tvariant=\"contained\"\r\n\t\t          \t\t\t>\r\n\t\t            Confirm\r\n\t\t          </Button>\r\n\t\t        </DialogActions>\r\n\t\t      </Dialog>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SecondaryDialog;","import React from 'react';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ListQuestions = ({ listQnP, removeItem}) => {\r\n    \r\n    const classes = useStyles();\r\n    const tempList = listQnP.map((data, i) => {\r\n        return(\r\n                <div key={i}>\r\n                    <ListItem >\r\n                            <SnackbarContent className={classes.snacker}\r\n                              aria-describedby=\"client-snackbar\"\r\n                              message={\r\n                                <span id=\"client-snackbar\" className={classes.message}>\r\n                                    <span>Q.{i+1} &nbsp;</span>\r\n                                    {data}\r\n                                    <IconButton onClick={() => removeItem(\"questionPolling\", i)} \r\n                                        aria-label=\"delete\" \r\n                                         size=\"small\">\r\n                                      <DeleteIcon id=\"trash\" fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                </span>\r\n                              }\r\n                            />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </div>\r\n            )\r\n    })\r\n    return tempList;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default ListQuestions;","import React from 'react';\r\n\r\nimport { Centered } from '../../Styles.jsx';\r\nimport PrimaryDialog from './PrimaryDialog/PrimaryDialog.jsx';\r\nimport SecondaryDialog from './SecondaryDialog/SecondaryDialog.jsx';\r\nimport ListQuestions from './ListQuestions/ListQuestions.jsx';\r\n\r\nimport {Block} from 'baseui/block';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst Questions = ({myref, listQnP, removeItem, toggleDialog, space, isPrimaryOpen, isSecondaryOpen, updatePollQuestions, listQnPLength, switchPage}) => {\r\n\r\n    const classes = useStyles();\r\n\treturn(\r\n        <React.Fragment>\r\n\r\n            \r\n            <Paper>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n\r\n                    <ListQuestions\r\n                    listQnP={listQnP}\r\n                    removeItem={removeItem}\r\n                    />\r\n\r\n                </List>\r\n            </Paper>\r\n    \r\n            <Centered>\r\n                \r\n                {/*Add Button*/}\r\n                <Block paddingTop=\"500px\" />\r\n                <div id=\"scroll\" myref={myref}>\r\n                    <Fab \r\n                    size=\"large\" \r\n                    onClick={(e) => toggleDialog(\"primary\", true) }\r\n                    color=\"secondary\" \r\n                    aria-label=\"add\" \r\n                    className={classes.fab}\r\n                    >\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </div>\r\n                \r\n                {/*Question or Poll Dialog Box check*/}\r\n                <PrimaryDialog\r\n                space={space} \r\n                isPrimaryOpen={isPrimaryOpen} \r\n                toggleDialog={toggleDialog}\r\n                />\r\n\r\n                {/*Enter Poll Question Dialog Box*/}\r\n                <SecondaryDialog \r\n                isSecondaryOpen={isSecondaryOpen} \r\n                toggleDialog={toggleDialog}\r\n                updatePollQuestions={updatePollQuestions.bind(this)}\r\n                />\r\n\r\n                \r\n            </Centered> \r\n\r\n            {/*Next Button on page 1*/}\r\n            <Centered>\r\n                <ButtonMaterialUI\r\n                    onClick={() => {\r\n                        if(listQnPLength > 0)\r\n                            switchPage(2)\r\n                    }}\r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    className={classes.button}>\r\n                    Next\r\n                    <Icon className={classes.rightIcon}>send</Icon>\r\n                </ButtonMaterialUI>\r\n            </Centered>\r\n        </React.Fragment> \r\n\t)\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  fab: {\r\n    margin: theme.spacing(1),\r\n    /*position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',*/\r\n  }\r\n}));\r\n\r\nexport default Questions;","import io from 'socket.io-client';\r\n\r\nconst connect = () => {\r\n  Socket.socket = io.connect('https://n-ivehement.herokuapp.com');\r\n}\r\n\r\nconst on = (eventName, callback) => {\r\n  if (Socket.socket) {\r\n    Socket.socket.on(eventName, data => {\r\n      callback(data);\r\n    });\r\n  }\r\n}\r\n\r\nconst emit = (eventName, data) => {\r\n  if (Socket.socket) {\r\n    Socket.socket.emit(eventName, data);\r\n  }\r\n}\r\n\r\nconst removeListener = (eventName) => {\r\n  if (Socket.socket) {\r\n    Socket.socket.removeListener(eventName);\r\n  }\r\n}\r\n\r\nconst Socket = {\r\n  connect,\r\n  on,\r\n  emit,\r\n  removeListener,\r\n  socket: null\r\n}\r\n\r\nexport default Socket;","import React from 'react';\r\nimport Socket from '../../../redux/Socket';\r\n\r\nimport { Centered } from '../../Styles.jsx';\r\n\r\nimport {Block} from 'baseui/block';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst initialState = {\r\n    tempTotalParticipants: 0,\r\n}\r\n\r\nclass ParticipantsTuneE extends React.Component {\r\n    constructor() {\r\n        super();\r\n        if(!localStorage.getItem('tempTotalParticipants')) {\r\n          localStorage.setItem('tempTotalParticipants', JSON.stringify(initialState))\r\n          this.state = initialState;\r\n        }\r\n        else {\r\n          this.state = JSON.parse(localStorage.getItem('tempTotalParticipants'));\r\n        }\r\n    }\r\n\r\n    handleFinal(totalParticipants) {\r\n        this.props.updateAdmin(totalParticipants);\r\n        this.props.switchPage(6);\r\n        Socket.emit('le poll', {\r\n            isSecure: this.props.secureState,\r\n            pseudonym: this.props.pseudonym,\r\n            questions: this.props.listQnP,\r\n            totalParticipants: totalParticipants,\r\n        })\r\n      }\r\n\r\n    handleParticipants(event) {\r\n      this.setState({tempTotalParticipants: event.target.value}, () => {\r\n        this.props.updateAdmin(this.state.tempTotalParticipants);\r\n      })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Paper>\r\n                    <Centered>\r\n                        <TextField\r\n                        id=\"outlined-number\"\r\n                        label=\"Participants\"\r\n                        onChange={(e) => this.handleParticipants(e)}\r\n                        type=\"number\"\r\n                        className={this.props.classes.textField}\r\n                        defaultValue={this.props.totalParticipants}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        autoFocus\r\n                        />\r\n                        <FormGroup>\r\n                          <FormControlLabel\r\n                            control={\r\n                                <Switch size=\"medium\" \r\n                                checked={this.props.secureState} \r\n                                onClick={() => this.props.toggleSwitch()} \r\n                                />}\r\n                            label=\"Secure\"\r\n                          />\r\n                        </FormGroup>\r\n                    </Centered>\r\n                </Paper>\r\n                {/*Done Button on Page 2 Participants*/}\r\n                <Centered>\r\n                        <Block paddingTop=\"300px\" />\r\n                        <ButtonMaterialUI\r\n                            onClick={() => {\r\n                                if(this.state.tempTotalParticipants > 1)\r\n                                    return this.handleFinal(this.state.tempTotalParticipants)\r\n                            }}\r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            className={this.props.classes.buttonDone}>\r\n                            Done\r\n                        </ButtonMaterialUI>\r\n                    \r\n                </Centered>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonDone: {\r\n    margin: theme.spacing(1),\r\n    fontSize: 25,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    maxlength: 200,\r\n  },\r\n}));\r\n\r\nconst ParticipantsTune =({ pseudonym, listQnP, secureState, totalParticipants, switchPage, toggleSwitch, isSecure, updateAdmin}) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <ParticipantsTuneE\r\n        classes={classes}\r\n        isSecure={isSecure}\r\n        pseudonym={pseudonym}\r\n        listQnP={listQnP}\r\n        secureState={secureState}\r\n        switchPage={switchPage}\r\n        totalParticipants={totalParticipants}\r\n        toggleSwitch={toggleSwitch}\r\n        updateAdmin={updateAdmin}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ParticipantsTune;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { toggleDialog, handleHomeClick, warnClick, switchPage, removeItem, toggleSwitch, updateQ, updateAdmin} from '../../redux/actions';\r\nimport './Poll.css'\r\n\r\nimport PositiveHead from '../Head/PositiveHead.jsx';\r\nimport Title from './Body/Title.jsx';\r\nimport Questions from './Body/Questions.jsx';\r\nimport ParticipantsTune from './Body/ParticipantsTune.jsx';\r\n\r\n \r\nimport {useStyletron} from 'baseui';\r\n\r\nclass PollE extends React.Component {\r\n \r\n    constructor() {\r\n        super();\r\n        this.myRef = React.createRef();\r\n    }\r\n \r\n    componentDidMount() {\r\n        window.scrollTo(0, this.myRef.offsetTop);\r\n    }\r\n\r\n    updatePollQuestions(question) {\r\n        const prevQ = this.props.listQnP;\r\n        prevQ.push(question);\r\n        this.props.updateQ(prevQ);\r\n    }\r\n    render() {\r\n        if(this.props.isHomeClick) {\r\n            return (<Redirect to={'/'} />)\r\n        }\r\n        if(this.props.onPage === 0) return <Redirect to='/' />\r\n        if(this.props.onPage === 6) return <Redirect to='/live' />\r\n\r\n        return(\r\n            <div>\r\n                <PositiveHead\r\n                participantNotify={this.props.participantNotify}\r\n                toggleDialog={this.props.toggleDialog}\r\n                handleHomeClick={this.props.handleHomeClick}\r\n                warnClick={this.props.warnClick}\r\n                warning={this.props.warning}\r\n                onPage={this.props.onPage}\r\n                switchPage={this.props.switchPage}\r\n                />\r\n\r\n                <Title pseudonym={this.props.pseudonym}/>\r\n\r\n                <div>\r\n                    {\r\n                        this.props.onPage === 1 ?\r\n\r\n                        <Questions\r\n                        myref={this.myRef}\r\n                        listQnP={this.props.listQnP}\r\n                        removeItem={this.props.removeItem}\r\n                        toggleDialog={this.props.toggleDialog}\r\n                        space={this.space}\r\n                        isPrimaryOpen={this.props.isPrimaryOpen}\r\n                        isSecondaryOpen={this.props.isSecondaryOpen}\r\n                        updatePollQuestions={this.updatePollQuestions.bind(this)}\r\n                        listQnPLength={this.props.listQnP.length}\r\n                        switchPage={this.props.switchPage}\r\n                        /> :\r\n\r\n                        <ParticipantsTune\r\n                        isSecure={this.props.isSecure}\r\n                        pseudonym={this.props.pseudonym}\r\n                        listQnP={this.props.listQnP}\r\n                        secureState={this.props.secureState}\r\n                        switchPage={this.props.switchPage}\r\n                        toggleSwitch={this.props.toggleSwitch}\r\n                        updateAdmin={this.props.updateAdmin}\r\n                        totalParticipants={this.props.totalParticipants}\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleDialog: (surface, dialogSwitch) => dispatch(toggleDialog(surface, dialogSwitch)),\r\n  handleHomeClick: (payload) => dispatch(handleHomeClick(payload)),\r\n  warnClick: (payload) => dispatch(warnClick(payload)),\r\n  switchPage: (payload) => dispatch(switchPage(payload)),\r\n  removeItem: (payload) => dispatch(removeItem(payload)),\r\n  toggleSwitch: (payload) => dispatch(toggleSwitch(payload)),\r\n  updateQ: (payload) => dispatch(updateQ(payload)),\r\n  updateAdmin: (payload) => dispatch(updateAdmin(payload)),\r\n});\r\n\r\nconst Poll = ({rootReducer, toggleDialog, handleHomeClick, warnClick, switchPage, removeItem, toggleSwitch, updateQ, updateAdmin}) => {\r\n    const [useCss, theme] = useStyletron();\r\n    const space = useCss({marginLeft: theme.sizing.scale1200});\r\n    return(\r\n        <PollE\r\n        space={space}\r\n        listQnP={rootReducer.listQnP}\r\n        onPage={rootReducer.onPage}\r\n        participantNotify={rootReducer.participantNotify}\r\n        warning={rootReducer.warning}\r\n        pseudonym={rootReducer.pseudonym}\r\n        isPrimaryOpen={rootReducer.isPrimaryOpen}\r\n        isSecondaryOpen={rootReducer.isSecondaryOpen}\r\n        isSecure={rootReducer.isSecure}\r\n        secureState={rootReducer.secureState}\r\n        totalParticipants={rootReducer.totalParticipants}\r\n\r\n        toggleDialog={toggleDialog}\r\n        handleHomeClick={handleHomeClick}\r\n        warnClick={warnClick}\r\n        switchPage={switchPage}\r\n        removeItem={removeItem}\r\n        toggleSwitch={toggleSwitch}\r\n        updateQ={updateQ}\r\n        updateAdmin={updateAdmin}\r\n        />\r\n    )\r\n}\r\n\r\nconst ConnectedLayer = connect(mapStateToProps, mapDispatchToProps)(Poll);\r\n\r\nexport default ConnectedLayer;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Centered} from  '../Styles.jsx';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst HomeIcon = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nconst LivePollHead = ({onPage, switchPage}) => {\r\n    const classes = useStyles();\r\n\r\n    if(onPage === 0) return <Redirect to={'/'} />\r\n\r\n    return(\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                        <ButtonMaterialUI onClick={() => switchPage(0)}>\r\n                            <HomeIcon \r\n                                className={classes.iconHover} \r\n                                style={{ fontSize: 30, color:'#03fc98' }} />\r\n                        </ButtonMaterialUI>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        &nbsp; aire\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Paper>\r\n              \r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  <Centered>\r\n                     Live Polls\r\n                  </Centered>\r\n                </Typography>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    '&:hover': {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default LivePollHead;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Notification = ({participantNotify, switchPage}) => {\r\n  \tconst classes = useStyles();\r\n\treturn(\r\n\t\t<ButtonMaterialUI\r\n\t\tonClick={() => switchPage(3)}\r\n\t\t>\r\n\t\t\t<Badge color=\"secondary\" className={classes.margin} invisible={participantNotify} variant=\"dot\">\r\n\t          <AccountCircleIcon \r\n\t          style={{color:'#03fc98'}}\r\n\t          />\r\n\t        </Badge>\r\n\t\t</ButtonMaterialUI>\r\n\t)\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nimport {Transition} from  '../Styles.jsx';\r\nimport Notification from './Notification/Notification.jsx';\r\n\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ThreeSixtyIcon from '@material-ui/icons/ThreeSixty';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst HomeIcon = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\n\r\nconst LiveHead = ({ isAdmin, participantNotify, handleHomeClick, toggleDialog, warnClick, warning, onPage, switchPage }) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                    <ButtonMaterialUI onClick={() => handleHomeClick()}>\r\n                        <HomeIcon \r\n                            className={classes.iconHover} \r\n                            style={{ fontSize: 30, color:'#03fc98' }} />\r\n                    </ButtonMaterialUI>\r\n                <Dialog\r\n                    open={warning}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                >\r\n                    <DialogActions>\r\n                        <DialogContentText>\r\n                            <span className={classes.warn}>\r\n                                Are you sure?\r\n                            </span>\r\n                        </DialogContentText>\r\n                        <ButtonMaterialUI \r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => toggleDialog(\"warn\", false)}\r\n                        >\r\n                        Cancel\r\n                        </ButtonMaterialUI>\r\n                        <ButtonMaterialUI\r\n                        onClick={() => {\r\n                          warnClick();\r\n                        }}\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        >\r\n                        Confirm\r\n                        </ButtonMaterialUI>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                \r\n\r\n\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    &nbsp; aire\r\n                </Typography>\r\n                \r\n                        {\r\n                            isAdmin === 1 ?\r\n                            <div>\r\n                                {\r\n                                    onPage === 6 ?\r\n                                    <Notification\r\n                                    switchPage={switchPage}\r\n                                    participantNotify={participantNotify}\r\n                                    /> :\r\n                                    <ButtonMaterialUI onClick={() => {\r\n                                        switchPage(6)\r\n                                    }}>\r\n                                        <Grid item xs={8}>\r\n                                            <ThreeSixtyIcon \r\n                                                className={classes.icon}\r\n                                                style={{color:'#03fc98'}}\r\n                                            />\r\n                                        </Grid>\r\n                                    </ButtonMaterialUI>\r\n                                }\r\n                            </div> :\r\n                            null\r\n                        }\r\n                \r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n       \r\n    }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    '&:hover': {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(0),\r\n    fontSize: 30,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  warn: `\r\n    color: red;\r\n    padding: 0 30px;\r\n  `,\r\n}));\r\n\r\n\r\nexport default LiveHead;","import React from 'react';\r\n\r\n\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst ListPoll = ({polls, switchPage, updatePseudonym, updateParticipants}) => {\r\n\tconst classes = useStyles();\r\n\tif(!polls) return null;\r\n\r\n\tconst data = Object.keys(polls).map((pseudonym, i) => {\r\n\t\treturn(\r\n\t\t\t<ListItem key={i} >\r\n\t\t            <SnackbarContent\r\n\t\t            className={classes.snacker}\r\n\t\t              aria-describedby=\"client-snackbar\"\r\n\t\t              message={\r\n\t\t                <Badge \r\n\t\t                className={classes.margin}\r\n\t\t                invisible={!polls[pseudonym]}\r\n\t\t                color='secondary'\r\n\t\t                variant=\"dot\" \r\n\t\t                >\r\n\t\t\t\t\t        <Typography className={classes.padding}>\r\n\t\t\t\t\t        {pseudonym}\r\n\t\t\t\t\t        </Typography>\r\n\t\t\t\t\t    </Badge>\r\n\t\t              }\r\n\t\t            />\r\n\t\t            <Button\r\n\t\t            onClick={() => {\r\n\t\t            \tfetch('https://n-ivehement.herokuapp.com/listparticipants', {\r\n\t\t\t\t        method: 'post',\r\n\t\t\t\t        headers: {'Content-Type': 'application/json'},\r\n\t\t\t\t        body: JSON.stringify({\r\n\t\t\t\t          pseudonym: pseudonym\r\n\t\t\t\t        })\r\n\t\t\t\t      })\r\n\t\t\t\t        .then(response => response.json())\r\n\t\t\t\t        .then(list => {\r\n\t\t\t\t        \tupdatePseudonym(pseudonym);\r\n\t\t\t\t        \tupdateParticipants(list);\r\n\r\n\t\t\t\t        \tif(list) switchPage(4);\r\n\t\t\t\t        })\r\n\t\t            }}\r\n\t\t            className={classes.margin} size=\"small\">\r\n\t                \tEnter\r\n\t                </Button>\r\n\r\n\r\n\t\t    </ListItem>\r\n\t\t)\r\n\t})\r\n\treturn data;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n   padding: {\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  snacker: {\r\n  \tbackgroundColor: 'teal',\r\n  }\r\n}));\r\n\r\n\r\nexport default ListPoll;","import React from 'react';\r\n\r\nimport {Doughnut} from 'react-chartjs-2';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n/*const getRandomInt = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}*/\r\n\r\nconst fillResult = ({yes, no}, total) => ({\r\n  labels: [\r\n    'Neutral',\r\n    'Yes',\r\n    'No'\r\n  ],\r\n  datasets: [{\r\n    data: [total-(yes+no), yes, no],\r\n    backgroundColor: [\r\n    '#CCC',\r\n    '#36A2EB',\r\n    '#FFCE56'\r\n    ],\r\n    hoverBackgroundColor: [\r\n    '#FF6384',\r\n    '#36A2EB',\r\n    '#FFCE56'\r\n    ]\r\n  }]\r\n});\r\n\r\nclass ListLiveQuestionsResultE extends React.Component {\r\n\r\n    render() {\r\n      const lisLivetQnPResult = this.props.listQnP.map((data, i) => {\r\n        return(\r\n                  <Paper key={i}>\r\n                      <ListItem >\r\n                              <SnackbarContent className={this.props.classes.snacker}\r\n                                aria-describedby=\"client-snackbar\"\r\n                                message={\r\n                                  <span id=\"client-snackbar\" className={this.props.classes.message}>\r\n                                      <span>Q.{i+1} &nbsp;</span>\r\n                                      {data}\r\n                                  </span>\r\n                                }\r\n                              />\r\n                      </ListItem>\r\n                      <Doughnut data={() => {\r\n                        if(this.props.liveFeedUpdate[i]) {\r\n                          return fillResult(this.props.liveFeedUpdate[i], this.props.total)\r\n                        }\r\n                        else\r\n                          return fillResult({yes: 0, no: 0}, this.props.totalParticipants)\r\n                      }} />\r\n                      <Divider />\r\n                  </Paper>\r\n              )\r\n      })\r\n      return lisLivetQnPResult;\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst ListLiveQuestionsResult = ({ listQnP, liveFeedUpdate, total, totalParticipants}) => {\r\n  const classes = useStyles();\r\n  return(\r\n    <ListLiveQuestionsResultE\r\n    classes={classes}\r\n    listQnP={listQnP}\r\n    liveFeedUpdate={liveFeedUpdate}\r\n    total={total}\r\n    totalParticipants={totalParticipants}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ListLiveQuestionsResult;","import React from 'react';\r\n\r\nimport {Centered} from '../Styles.jsx';\r\nimport LiveHead from '../Head/LiveHead.jsx';\r\nimport ListLiveQuestionsResult from './ListLiveQuestionsResult/ListLiveQuestionsResult.jsx'\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\n\r\nclass LiveFeed extends React.Component {\r\n\r\n    componentDidMount() {\r\n        //if(this.props.onPage === 0) this.props.switchPage(this.props.pseudonym, 0)\r\n        /*this.props.handleLiveFeed(this.props.pseudonym);*/\r\n        this.handleLiveFeed(this.props.pseudonym)\r\n    }\r\n\r\n    handleLiveFeed(pseudonym) {\r\n        if(!this.props.liveFeedUpdate) {\r\n          fetch('https://n-ivehement.herokuapp.com/fetchlivefeed', {\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            pseudonym: pseudonym\r\n          })\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this.props.liveFeedUpdate(data);\r\n          })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n        return (\r\n          <Paper>\r\n\r\n            <LiveHead\r\n            handleHomeClick={this.props.handleHomeClick}\r\n            warnClick={this.props.warnClick}\r\n            isAdmin={this.props.isAdmin}\r\n            onPage={this.props.onPage}\r\n            participantNotify={this.props.participantNotify}\r\n            pseudonym={this.props.pseudonym}\r\n            switchPage={this.props.switchPage}\r\n            toggleDialog={this.props.toggleDialog}\r\n            warning={this.props.warning}\r\n            />\r\n\r\n            <Centered>\r\n            \t<h2>{this.props.pseudonym} | Live Poll</h2>\r\n            </Centered>\r\n\r\n            <ListLiveQuestionsResult \r\n            listQnP={this.props.listQnP}\r\n            liveFeedUpdate={this.props.liveFeedUpdate}\r\n            total={this.props.total}\r\n            totalParticipants={this.props.totalParticipants}\r\n            />\r\n            \r\n          </Paper>\r\n        );\r\n      }\r\n}\r\n\r\nexport default LiveFeed;","import React from 'react';\r\n\r\nimport { RedRadio, GreenRadio } from '../../../Styles.jsx';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ListToAnswerQuestions = ({ listQnP, handleRadio }) => {\r\n    \r\n    const classes = useStyles();\r\n    const tempList = listQnP.map((data, i) => {\r\n        return(\r\n                <div key={i}>\r\n                    <ListItem >\r\n                            <SnackbarContent className={classes.snacker}\r\n                              aria-describedby=\"client-snackbar\"\r\n                              message={\r\n                                <span id=\"client-snackbar\" className={classes.message}>\r\n                                    <span>Q.{i+1} &nbsp;</span>\r\n                                    {data}\r\n                                </span>\r\n                              }\r\n                            />\r\n                    </ListItem>\r\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                        <RadioGroup row\r\n                        className={classes.group}\r\n                        onChange={(e) => handleRadio(e, i)}\r\n                        >\r\n\t                        <FormControlLabel\r\n\t                        value=\"1\"\r\n\t                        control={ <GreenRadio/> }\r\n\t                        label=\"Yes\"\r\n\t                        labelPlacement=\"end\"\r\n\t                        />\r\n\r\n\t                        <FormControlLabel\r\n\t                        value=\"0\"\r\n\t                        control={ <RedRadio/> }\r\n\t                        label=\"No\"\r\n\t                        labelPlacement=\"end\"\r\n\t                        />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <Divider />\r\n                </div>\r\n            )\r\n    })\r\n    return tempList;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default ListToAnswerQuestions;","import React from 'react';\r\n\r\nimport {Centered} from '../../Styles.jsx';\r\nimport LivePollHead from '../../Head/LivePollHead.jsx';\r\nimport Title from '../../Poll/Body/Title.jsx'\r\nimport ListToAnswerQuestions from './ListToAnswerQuestions/ListToAnswerQuestions.jsx'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst MainSurvey = ({\r\n\thandleRadio,\r\n\thandleInitialSubmit,\r\n\tlistQnP,\r\n\tonPage,\r\n\tpseudonym,\r\n\tswitchPage,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<LivePollHead\r\n\t\t\tonPage={onPage}\r\n\t\t\tswitchPage={switchPage.bind(this)}\r\n\t\t\t/> \r\n\r\n\t\t\t<Title\r\n\t\t\tpseudonym={pseudonym}\r\n\t\t\t/>\r\n\r\n\t\t\t<ListToAnswerQuestions\r\n\t\t\thandleRadio={handleRadio.bind(this)}\r\n\t\t\tlistQnP={listQnP}\r\n\t\t\t/>\r\n\r\n\t\t\t<Centered>\r\n                <Button\r\n                    onClick={() => handleInitialSubmit()}\r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    className={classes.button}>\r\n                    Submit\r\n                </Button>\r\n            </Centered>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default MainSurvey;","import React from 'react';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ListParticipants = ({ listParticipants, updateInvite}) => {\r\n    const classes = useStyles();\r\n    const tempList = Object.keys(listParticipants).map((id, i) =>{\r\n        if(listParticipants[id])\r\n            return(\r\n                <div key={i}>\r\n                    <ListItem disabled button>\r\n                        <Chip \r\n                        className={classes.message}\r\n                        label={`${Number(id)+1} | ${listParticipants[id]}`} \r\n                        color=\"primary\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </div>\r\n            )\r\n        else\r\n            return(\r\n                <div key={i}>\r\n                    <ListItem onClick={() => updateInvite(true, i)} button>\r\n                        <Chip label={Number(id)+1} color=\"primary\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </div>\r\n            )\r\n        } );\r\n\r\n        return tempList;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default ListParticipants;","import React from 'react';\r\n\r\nimport {Centered} from  '../../Styles.jsx';\r\nimport ListParticipants from './ListParticipants/ListParticipants.jsx';\r\nimport Socket from '../../../redux/Socket';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nclass ParticipantsPortalE extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tempParticipantName: '',\r\n        }\r\n    }\r\n\r\n    tempChangeName(e) {\r\n        this.setState({tempParticipantName: e.target.value});\r\n    }\r\n\r\n    disableCurrentParticipant(index, name) {\r\n      const listParticipants = this.props.listParticipants;\r\n      listParticipants[index] = name;\r\n      Socket.emit('update serverListParticipants', {\r\n            pseudonym: this.props.pseudonym,\r\n            index: index,\r\n            name: name\r\n        })\r\n\r\n      this.props.updateParticipants(listParticipants);\r\n\r\n      fetch('https://n-ivehement.herokuapp.com/fetchq', {\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            pseudonym: this.props.pseudonym\r\n          })\r\n        })\r\n          .then(response => response.json())\r\n          .then(list => {\r\n            this.props.updateQ(list);\r\n            this.props.switchPage(5);\r\n          })\r\n    }\r\n    \r\n    render() {\r\n        const {classes} = this.props;\r\n        return(\r\n            <Centered>\r\n\r\n                <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n\r\n                    <ListParticipants\r\n                    listParticipants={this.props.listParticipants}\r\n                    updateInvite={this.props.updateInvite}\r\n                    />\r\n\r\n                </List>\r\n\r\n                <Dialog fullWidth open={this.props.wantParticipant} onClose={() => {\r\n                        this.props.updateInvite(false)\r\n                    }} \r\n                    aria-labelledby=\"form-dialog-title\">\r\n                    <DialogContent>\r\n                      <TextField\r\n                        required\r\n                        id=\"outlined-multiline-flexible\"\r\n                        label=\"Name\"\r\n                        onChange={(e) => this.tempChangeName(e)}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        autoFocus\r\n                      />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <ButtonMaterialUI \r\n                        onClick={() => this.props.updateInvite(false)}\r\n                        color=\"primary\">\r\n                        Cancel\r\n                      </ButtonMaterialUI>\r\n                      <ButtonMaterialUI onClick={() => \r\n                                {   \r\n                                    if(this.state.tempParticipantName) {\r\n                                        this.disableCurrentParticipant(this.props.currentParticipantClickSerial, this.state.tempParticipantName);\r\n                                        this.props.updateInvite(false)\r\n                                    }\r\n                                }\r\n                            }\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                >\r\n                        Register\r\n                      </ButtonMaterialUI>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Centered>\r\n        )\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '360px',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst ParticipantsPortal = ({currentParticipantClickSerial, listParticipants, pseudonym, switchPage, updateQ, updateInvite, wantParticipant, updateParticipants}) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <ParticipantsPortalE\r\n        classes={classes}\r\n        currentParticipantClickSerial={currentParticipantClickSerial}\r\n        listParticipants={listParticipants}\r\n        pseudonym={pseudonym}\r\n        wantParticipant={wantParticipant}\r\n\r\n        switchPage={switchPage}\r\n        updateQ={updateQ}\r\n        updateInvite={updateInvite}\r\n        updateParticipants={updateParticipants}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ParticipantsPortal;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\n\r\nconst polulate = {\r\n    dummyData: [\r\n        {\r\n            index: 0,\r\n            name: 'Jai',\r\n            isAdded: true\r\n        },\r\n        {\r\n            index: 1,\r\n            name: 'John',\r\n            isAdded: false\r\n        },\r\n        {\r\n            index: 2,\r\n            name: 'Jane',\r\n            isAdded: false\r\n        },\r\n        {\r\n            index: 3,\r\n            name: 'Jia',\r\n            isAdded: false\r\n        },\r\n    ]\r\n}\r\n\r\nconst ListParticipants = () => {\r\n    const classes = useStyles();\r\n    const tempList = polulate.dummyData.map((unit, i) => {\r\n        if(!unit.isAdded)\r\n            return(\r\n                <div key={i}>\r\n                    <ListItem>\r\n                        <SnackbarContent className={classes.snacker}\r\n                          aria-describedby=\"client-snackbar\"\r\n                          message={\r\n                            <span id=\"client-snackbar\" className={classes.message}>\r\n                                {`${unit.index+1} | ${unit.name}`}\r\n                            </span>\r\n                          }\r\n                        />\r\n\r\n                        <IconButton\r\n                        aria-label=\"delete\" \r\n                        size=\"small\"\r\n                        style={{ color: 'red' }}\r\n                        >\r\n                            <PersonAddDisabledIcon />\r\n                        </IconButton>\r\n                        <Icon\r\n                        fontSize='large'\r\n                        style={{ color: 'white'}}\r\n                        >\r\n                        </Icon>\r\n                        <IconButton \r\n                        aria-label=\"delete\" \r\n                        size=\"small\"\r\n                        style={{ color: 'blue' }}\r\n                        >\r\n                            <PersonAddIcon />\r\n                        </IconButton>\r\n                        \r\n                    </ListItem>\r\n                </div>\r\n            )\r\n        else return null\r\n    } );\r\n    return tempList;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default ListParticipants;","import React from 'react';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst polulate = {\r\n    dummyData: [\r\n        {\r\n            index: 0,\r\n            name: 'Jai',\r\n            isAdded: true\r\n        },\r\n        {\r\n            index: 1,\r\n            name: 'John',\r\n            isAdded: false\r\n        },\r\n        {\r\n            index: 2,\r\n            name: 'Jane',\r\n            isAdded: false\r\n        },\r\n        {\r\n            index: 3,\r\n            name: 'Jia',\r\n            isAdded: false\r\n        },\r\n    ]\r\n}\r\n\r\nconst ListParticipants = () => {\r\n    const classes = useStyles();\r\n    const tempList = polulate.dummyData.map((unit, i) => {\r\n        if(unit.isAdded)\r\n            return(\r\n                <div key={i}>\r\n                    <ListItem>\r\n                        <SnackbarContent className={classes.snacker}\r\n                          aria-describedby=\"client-snackbar\"\r\n                          message={\r\n                            <span id=\"client-snackbar\" className={classes.message}>\r\n                                {`${unit.index+1} | ${unit.name}`}\r\n                            </span>\r\n                          }\r\n                        />\r\n                        <Icon\r\n                        fontSize='large'\r\n                        style={{ color: 'white'}}\r\n                        >\r\n                        </Icon>\r\n                        <Icon\r\n                        style={{ color: 'green' }}\r\n                        >\r\n                            <DoneOutlineIcon/>\r\n                        </Icon>\r\n                        <Icon\r\n                        fontSize='large'\r\n                        style={{ color: 'white'}}\r\n                        >\r\n                        </Icon>\r\n                    </ListItem>\r\n                </div>\r\n            )\r\n        else\r\n            return null\r\n    } );\r\n    return tempList;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default ListParticipants;","import React from 'react';\r\n\r\nimport Title from '../../Poll/Body/Title.jsx'\r\nimport ListRequestedParticipants from './ListRequestedParticipants/ListRequestedParticipants.jsx';\r\nimport ListAddedParticipants from './ListAddedParticipants/ListAddedParticipants.jsx';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ParticipantsInvitation = ({pseudonym}) => {\r\n\tconst classes = useStyles();\r\n\treturn(\r\n\t\t<div>\r\n\r\n\t\t\t<Title\r\n\t\t\tpseudonym={pseudonym}\r\n\t\t\t/>\r\n\r\n\t\t\t<Paper>\r\n\t\t\t\t<List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n\r\n\t                <ListRequestedParticipants\r\n\t                />\r\n\r\n\t            </List>\r\n\t\t\t</Paper>\r\n\r\n\t\t\t\r\n\r\n\t\t\t<Paper>\r\n\t\t\t\t<List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n\r\n\t                <ListAddedParticipants\r\n\t                />\r\n\r\n\t            </List>\r\n\t\t\t</Paper>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '360px',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default ParticipantsInvitation;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport Socket from '../../redux/Socket';\r\nimport {submit, switchPage, handleHomeClick, warnClick, toggleDialog, updateInvite, updateQ, updatePseudonym, updateParticipants} from '../../redux/actions';\r\n\r\nimport {Block} from 'baseui/block';\r\n\r\nimport LivePollHead from '../Head/LivePollHead.jsx';\r\nimport LiveHead from '../Head/LiveHead.jsx';\r\nimport ListPoll from './ListPoll/ListPoll.jsx';\r\nimport LiveFeed from './LiveFeed.jsx';\r\nimport MainSurvey from './MainSurvey/MainSurvey.jsx'\r\nimport ParticipantsPortal from './ParticipantsPortal/ParticipantsPortal.jsx';\r\nimport ParticipantsInvitation from './ParticipantsInvitation/ParticipantsInvitation.jsx'\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport List from '@material-ui/core/List';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nclass LivePollE extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tpollResult: {},\r\n\t\t}\r\n\t}\r\n\thandleInitialSubmit() {\r\n\t\tif(Object.keys(this.state.pollResult).length === this.props.listQnP.length) {\r\n\t\t\tSocket.emit('update pollResult', {\r\n\t\t      pollResult: this.state.pollResult,\r\n\t\t      pseudonym: this.props.pseudonym\r\n\t\t    });\r\n\t\t\tthis.props.submit(this.state.pollResult);\r\n\t\t\tthis.props.switchPage(6);\r\n\t\t}\r\n\t}\r\n\thandleRadio(e, i) {\r\n\t\tconst tempResult = this.state.pollResult;\r\n\t\ttempResult[i] = e.target.value;\r\n\t\tthis.setState({pollResult: tempResult});\r\n\t}\r\n\trender() {\r\n\t\tif(this.props.onPage === 0) return <Redirect to={'/'} />\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.onPage === -1 ?\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<LivePollHead\r\n\t\t\t\t\t\tonPage={this.props.onPage}\r\n\t\t\t\t\t\tswitchPage={this.props.switchPage}\r\n\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\r\n\t\t\t            <React.Fragment>\r\n\t\t\t              <CssBaseline />\r\n\t\t\t              <Container maxWidth=\"sm\">\r\n\t\t\t                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n\t\t\t                    <Block paddingTop=\"50px\" />\r\n\r\n\t\t\t                        <ListPoll\r\n\t\t\t                        polls={this.props.polls}\r\n\t\t\t                        switchPage={this.props.switchPage}\r\n\t\t\t                        updatePseudonym={this.props.updatePseudonym}\r\n\t\t\t                        updateParticipants={this.props.updateParticipants}\r\n\t\t\t                        />\r\n\r\n\t\t\t                    <Block paddingTop=\"50px\" />\r\n\t\t\t                </List>\r\n\t\t\t              </Container>\r\n\t\t\t            </React.Fragment>\r\n\r\n\t\t\t\t\t</div> :\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.onPage === 3 ?\r\n\r\n\t\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t\t\t<LiveHead\r\n\t\t\t\t\t            handleHomeClick={this.props.handleHomeClick}\r\n\t\t\t\t\t            warnClick={this.props.warnClick}\r\n\t\t\t\t\t            isAdmin={this.props.isAdmin}\r\n\t\t\t\t\t            onPage={this.props.onPage}\r\n\t\t\t\t\t            participantNotify={this.props.participantNotify}\r\n\t\t\t\t\t            pseudonym={this.props.pseudonym}\r\n\t\t\t\t\t            switchPage={this.props.switchPage}\r\n\t\t\t\t\t            toggleDialog={this.props.toggleDialog}\r\n\t\t\t\t\t            warning={this.props.warning}\r\n\t\t\t\t\t            />\r\n\r\n\t\t\t\t\t            <ParticipantsInvitation\r\n\t\t\t\t\t            pseudonym={this.props.pseudonym}\r\n\t\t\t\t\t            />\r\n\r\n\t\t\t\t\t\t\t</div> :\r\n\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.onPage === 4 ?\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<LivePollHead\r\n\t\t\t\t\t\t\t\t\tonPage={this.props.onPage}\r\n\t\t\t\t\t\t\t\t\tswitchPage={this.props.switchPage}\r\n\t\t\t\t\t\t\t\t\t/> \r\n\r\n\t\t\t                        <ParticipantsPortal\r\n\t\t\t                        currentParticipantClickSerial={this.props.currentParticipantClickSerial}\r\n\t\t\t                        listParticipants={this.props.listParticipants}\r\n\t\t\t                        pseudonym={this.props.pseudonym}\r\n\t\t\t                        wantParticipant={this.props.wantParticipant}\r\n\t\t\t                        switchPage={this.props.switchPage}\r\n\t\t\t                        updateQ={this.props.updateQ}\r\n\t\t\t                        updateInvite={this.props.updateInvite}\r\n\t\t\t                        updateParticipants={this.props.updateParticipants}\r\n\t\t\t                        />\r\n\t\t\t\t\t\t\t\t</div> :\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis.props.onPage === 5 ?\r\n\r\n\t\t\t\t\t\t\t\t\t\t<MainSurvey \r\n\t\t\t\t\t\t\t\t\t\thandleRadio={this.handleRadio.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\thandleInitialSubmit={this.handleInitialSubmit.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tlistQnP={this.props.listQnP}\r\n\t\t\t\t\t\t\t\t\t\tonPage={this.props.onPage}\r\n\t\t\t\t\t\t\t\t\t\tpseudonym={this.props.pseudonym}\r\n\t\t\t\t\t\t\t\t\t\tswitchPage={this.props.switchPage}\r\n\t\t\t\t\t\t\t\t\t\t/> :\r\n\r\n\t\t\t\t\t\t\t\t\t\t<LiveFeed \r\n\t\t\t\t\t\t\t\t\t\tclasses={this.props.classes}\r\n\t\t\t\t\t\t\t            warnClick={this.props.warnClick}\r\n\t\t\t\t\t\t\t            handleHomeClick={this.props.handleHomeClick}\r\n\t\t\t\t\t\t\t            isAdmin={this.props.isAdmin}\r\n\t\t\t\t\t\t\t            listQnP={this.props.listQnP}\r\n\t\t\t\t\t\t\t            liveFeedUpdate={this.props.liveFeedUpdate}\r\n\t\t\t\t\t\t\t            onPage={this.props.onPage}\r\n\t\t\t\t\t\t\t            participantNotify={this.props.participantNotify}\r\n\t\t\t\t\t\t\t            pseudonym={this.props.pseudonym}\r\n\t\t\t\t\t\t\t            switchPage={this.props.switchPage}\r\n\t\t\t\t\t\t\t            total={this.props.total}\r\n\t\t\t\t\t\t\t            totalParticipants={this.props.totalParticipants}\r\n\t\t\t\t\t\t\t            warning={this.props.warning}\r\n\t\t\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  submit: (payload) => dispatch(submit(payload)),\r\n  switchPage: (payload) => dispatch(switchPage(payload)),\r\n  handleHomeClick: () => dispatch(handleHomeClick()),\r\n  warnClick: (payload) => dispatch(warnClick(payload)),\r\n  toggleDialog: (payload) => dispatch(toggleDialog(payload)),\r\n  updateQ: (payload) => dispatch(updateQ(payload)),\r\n  updateInvite: (want, idx) => dispatch(updateInvite(want, idx)),\r\n  updatePseudonym: (payload) => dispatch(updatePseudonym(payload)),\r\n  updateParticipants: (payload) => dispatch(updateParticipants(payload)),\r\n});\r\n\r\nconst LivePoll = ({rootReducer, submit, switchPage, handleHomeClick, warnClick, toggleDialog, updateInvite, updateQ, updatePseudonym, updateParticipants}) => {\r\n\tconst classes = useStyles();\r\n\treturn(\r\n\t\t<LivePollE\r\n\t\tclasses={classes}\r\n\t\tcurrentParticipantClickSerial={rootReducer.currentParticipantClickSerial}\r\n\t\tpseudonym={rootReducer.pseudonym}\r\n\t\tonPage={rootReducer.onPage}\r\n\t\tpolls={rootReducer.polls}\r\n\t\tisAdmin={rootReducer.isAdmin}\r\n\t\tlistParticipants={rootReducer.listParticipants}\r\n\t\tliveFeedUpdate={rootReducer.liveFeedUpdate}\r\n\t\tparticipantNotify={rootReducer.participantNotify}\r\n\t\twarning={rootReducer.warning}\r\n\t\tlistQnP={rootReducer.listQnP}\r\n\t\ttotal={rootReducer.total}\r\n\t\ttotalParticipants={rootReducer.totalParticipants}\r\n\t\twantParticipant={rootReducer.wantParticipant}\r\n\r\n\t\tsubmit={submit}\r\n\t\tswitchPage={switchPage}\r\n\t\thandleHomeClick={handleHomeClick}\r\n\t\twarnClick={warnClick}\r\n\t\ttoggleDialog={toggleDialog}\r\n\t\tupdateInvite={updateInvite}\r\n\t\tupdateQ={updateQ}\r\n\t\tupdatePseudonym={updatePseudonym}\r\n\t\tupdateParticipants={updateParticipants}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LivePoll);","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { updateParticipants, updatePollResult, updateLivePolls, updateLiveFeed,  switchPage, handleLiveFeedUpdate } from './redux/actions'\r\n\r\nimport './App.css';\r\nimport Home from './components/Home/Home.jsx';\r\nimport Poll from './components/Poll/Poll.jsx';\r\nimport LivePoll from './components/Live/LivePoll.jsx';\r\nimport Socket from './redux/Socket';\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    Socket.connect();\r\n    this.attachSocketListeners();\r\n    Socket.emit('add user', '');\r\n    //this.EventEmitter.emit('add user', Math.random().toString(36).substring(7));\r\n  }\r\n  componentWillUnmount() {\r\n    //Socket.emit('forceDisconnect', \"dis\");\r\n  }\r\n\r\n  attachSocketListeners() {\r\n    Socket.on('update live feed', data => this.props.handleLiveFeedUpdate(data));\r\n    Socket.on('live polls', (polls) => this.handleNewPolls(polls));\r\n    Socket.on('update clientListParticipants', list => this.props.updateParticipants(list))\r\n  }\r\n\r\n  handleNewPolls(polls) {\r\n    const newPolls = Object.keys(polls);\r\n    const idx = newPolls.indexOf(this.props.pseudonym);\r\n    let page = this.props.onPage;\r\n    if(idx===-1 && (page===4 || page===5 || page===6)) {\r\n      page = 0;\r\n    }\r\n    this.props.updateLivePolls(polls);\r\n    this.props.switchPage(page);\r\n\r\n    if(page === 0) {\r\n      this.props.updatePollResult({});\r\n      this.props.updateLiveFeed({});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path='/' component={() => <Home /> } exact/>\r\n\r\n          <Route path='/unique' component={() => <Poll/> } />\r\n\r\n          <Route path='/live' component={() => <LivePoll/> } />\r\n\r\n          <Route component={() => { return (<h1 style={{ color: 'red', textAlign: 'center', paddingTop: '40vh' }}>Error 404: Not Found!</h1>) }} />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  pseudonym: state.rootReducer.pseudonym,\r\n  onPage: state.rootReducer.onPage,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateParticipants: (payload) => dispatch(updateParticipants(payload)),\r\n  updateLivePolls: (payload) => dispatch(updateLivePolls(payload)),\r\n  handleLiveFeedUpdate: (payload) => dispatch(handleLiveFeedUpdate(payload)),\r\n  switchPage: (payload) => dispatch(switchPage(payload)),\r\n  updatePollResult: (payload) => dispatch(updatePollResult(payload)),\r\n  updateLiveFeed: (payload) => dispatch(updateLiveFeed(payload)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport Socket from './Socket';\r\n\r\nconst merge = (prev, next) => Object.assign({}, prev, next)\r\n\r\nconst initialState = {\r\n      currentParticipantClickSerial: -1,\r\n      isHomeClick: false,\r\n      isAdmin: 0,\r\n      isPrimaryOpen: false,\r\n      isSecondaryOpen: false,\r\n      listParticipants: {}, \r\n      listQnP: [],\r\n      liveFeedUpdate: {},\r\n      onPage: 0,\r\n      participantName: '',\r\n      participantNotify: false,\r\n      password: '',\r\n      polls: {},\r\n      pollResult: {},\r\n      pseudonym: 'flai',\r\n      secureState: false,\r\n      totalParticipants: 0,\r\n      total: 0,\r\n      wantParticipant: false,\r\n      warning: false,\r\n    }\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'CLICK_WARN':\r\n      return merge(state, {\r\n        liveFeedUpdate: {},\r\n        onPage: 0,\r\n        isAdmin: 0,\r\n      })\r\n\r\n    case 'HOME_CLICK':\r\n      return merge(state, {warning: true})\r\n\r\n    case 'LIVE_FEED_UPDATE':\r\n      return merge(state, {\r\n        liveFeedUpdate: action.payload.update,\r\n        total: action.payload.total,\r\n      })\r\n\r\n    case 'LIVE_POLLS':\r\n      return merge(state, {polls: action.payload})\r\n\r\n    case 'POLLRESULT':\r\n      return merge(state, {pollResult: action.payload})\r\n\r\n    case 'PSEUDONYM':\r\n      Socket.emit('update pseudonym', action.payload)\r\n      return merge(state, {pseudonym: action.payload})\r\n\r\n    case 'REMOVE_ITEM':\r\n      let newQ = state.listQnP;\r\n      newQ.splice(Number(action.payload.index), 1)\r\n      return merge(state, {listQnP: newQ})\r\n\r\n    case 'SUBMIT':\r\n      return handleSubmit(state, action);\r\n\r\n    case 'SWITCH_PAGE':\r\n      return merge(state, {onPage: action.payload})\r\n\r\n    case 'TOGGLE_DIALOG':\r\n      return handleToggle(state, action.payload.surface, action.payload.dialogSwitch);\r\n\r\n    case 'TOGGLE_SWITCH':\r\n      return merge(state, {secureState: !state.secureState})\r\n\r\n    case 'UPDATE_ADMIN':\r\n      return merge(state, {isAdmin: 1, totalParticipants: action.payload})\r\n\r\n    case 'UPDATE_INVITE_SWITCHES':\r\n      return merge(state, {\r\n        wantParticipant: action.payload.want,\r\n        currentParticipantClickSerial: (action.payload.idx >= 0? action.payload.idx: state.currentParticipantClickSerial),\r\n      })\r\n\r\n    case 'UPDATE_FEED':\r\n      return merge(state, {liveFeedUpdate: action.payload})\r\n\r\n    case 'UPDATE_LIST':\r\n      return merge(state, {listParticipants: action.payload})\r\n\r\n    case 'UPDATE_Q':\r\n      return merge(state, {listQnP: action.payload})\r\n\r\n    case 'WARN_CLICK':\r\n      return handleWarningClick(state);\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst handleSubmit = (state, action) => {\r\n  Socket.emit('update pollResult', {pseudonym: state.pseudonym, pollResult: action.payload})\r\n  return merge(state, {pollResult: action.payload});\r\n}\r\n\r\nconst handleToggle = (state, surface, dialogSwitch) => {\r\n  if(surface === \"primary\") {\r\n    return merge(state, {isPrimaryOpen: dialogSwitch})\r\n  }\r\n  if(surface === \"secondary\") {\r\n    return merge(state, {isSecondaryOpen: dialogSwitch})\r\n  }\r\n  if(surface === \"warn\")  {\r\n    return merge(state, {warning: dialogSwitch})\r\n  }\r\n}\r\nconst handleWarningClick = (state) => {\r\n  Socket.emit('unpoll', state.pseudonym);\r\n  return merge(state, {\r\n    onPage: 0,\r\n    warning: false,\r\n    isAdmin: 0,\r\n    liveFeedUpdate: {},\r\n  })\r\n}\r\n\r\nconst reducer = combineReducers({\r\n  rootReducer: rootReducer,\r\n})\r\n\r\nexport default reducer\r\n","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport reducer from './reducer'\r\n\r\nconst persistConfig = {\r\n  key: 'airPoll',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\n  /*\r\nconst thunkMiddleware = store => next => action => {\r\n  if (typeof action === 'function') {\r\n    action(store.dispatch)\r\n  } else {\r\n    next(action)\r\n  }\r\n}\r\n*/\r\n\r\nexport const store = createStore(persistedReducer, applyMiddleware(thunk))\r\nexport const persistor = persistStore(store)\r\n\r\n","import { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport {LightTheme, BaseProvider} from 'baseui';\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport {store, persistor} from './redux/store'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\n// 2. Provide the engine to the app\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  \t<PersistGate loading={null} persistor={persistor}>\r\n  \t\t<StyletronProvider value={engine} debug={debug} debugAfterHydration>\r\n\t      <BaseProvider theme={LightTheme}>\r\n\t         <App />\r\n\t      </BaseProvider>\r\n\t  \t</StyletronProvider>\r\n  \t</PersistGate>\r\n  </Provider>, document.getElementById('root')\r\n  );\r\n\r\n/// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}