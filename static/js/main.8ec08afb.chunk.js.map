{"version":3,"sources":["redux/actions.js","components/Styles.jsx","components/Home/Home.jsx","components/Head/PositiveHead.jsx","components/Poll/Body/Title.jsx","components/Poll/Body/PrimaryDialog/PrimaryDialog.jsx","components/Poll/Body/SecondaryDialog/SecondaryDialog.jsx","components/Poll/Body/ListQuestions/ListQuestions.jsx","components/Poll/Body/Questions.jsx","redux/Socket.js","components/Poll/Body/ParticipantsTune.jsx","components/Poll/Poll.jsx","components/Head/LivePollHead.jsx","components/Head/Notification/Notification.jsx","components/Head/LiveHead.jsx","components/Live/ListPoll/ListPoll.jsx","components/Live/ListLiveQuestionsResult/ListLiveQuestionsResult.jsx","components/Live/LiveFeed.jsx","components/Live/MainSurvey/ListToAnswerQuestions/ListToAnswerQuestions.jsx","components/Live/MainSurvey/MainSurvey.jsx","components/Live/ParticipantsPortal/ListParticipants/ListParticipants.jsx","components/Live/ParticipantsPortal/ParticipantsPortal.jsx","components/Live/ParticipantsInvitation/ListRequestedParticipants/ListRequestedParticipants.jsx","components/Live/ParticipantsInvitation/ListAddedParticipants/ListAddedParticipants.jsx","components/Live/ParticipantsInvitation/ParticipantsInvitation.jsx","components/Live/LivePoll.jsx","App.jsx","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["switchPage","page","type","payload","toggleDialog","surface","dialogSwitch","updateParticipants","list","updatePseudonym","pseudonym","updateQ","Transition","React","forwardRef","props","ref","react_default","a","createElement","Slide","Object","assign","direction","GreenRadio","withStyles","root","color","green","&$checked","checked","Radio","RedRadio","red","Centered","styled","display","justifyContent","alignItems","height","Rightened","float","ValidationTextField","& input:valid + fieldset","borderColor","borderWidth","& input:invalid + fieldset","& input:valid:focus + fieldset","borderLeftWidth","padding","TextField","useStyles","makeStyles","theme","margin","spacing","flexWrap","progress","HomeE","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inProgress","isDisable","event","setState","target","value","_this2","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","check","flag","isAvailable","_this3","classes","onPage","react_router","to","id","className","Button","onClick","Assignment_default","style","fontSize","rel","href","ErrorOutline_default","noValidate","fullWidth","onChange","e","changePseudonym","label","required","variant","defaultValue","block","paddingTop","size","disabled","checkPseudonym","CircularProgress","Component","ConnectedLayer","connect","objectSpread","dispatch","_ref","rootReducer","Home_HomeE","HomeIcon","SvgIcon","d","iconHover","&:hover","icon","title","flexGrow","warn","PositiveHead","participantNotify","handleHomeClick","warnClick","warning","AppBar","position","Toolbar","PositiveHead_HomeIcon","Dialog","open","TransitionComponent","keepMounted","aria-labelledby","DialogActions","DialogContentText","Typography","Grid","item","xs","ThreeSixty_default","backgroundColor","palette","background","paper","fontFamily","Title","Paper","heading","createMuiTheme","overrides","MuiButton","PrimaryDialog","isPrimaryOpen","onClose","MuiThemeProvider","SecondaryDialog","changeAsk","ask","isSecondaryOpen","DialogContent","multiline","rowsMax","autoFocus","updatePollQuestions","formControl","group","message","snacker","secondary","main","ListQuestions","listQnP","removeItem","map","data","i","key","ListItem","SnackbarContent","aria-describedby","IconButton","aria-label","Delete_default","Divider","button","rightIcon","marginLeft","fab","Questions","myref","space","listQnPLength","Fragment","List","component","Body_ListQuestions_ListQuestions","Fab","Add_default","Body_PrimaryDialog_PrimaryDialog","Body_SecondaryDialog_SecondaryDialog","bind","Icon","Socket","socket","io","on","eventName","callback","emit","removeListener","initialState","tempTotalParticipants","ParticipantsTuneE","localStorage","getItem","parse","setItem","totalParticipants","updateAdmin","isSecure","secureState","questions","handleParticipants","textField","InputLabelProps","shrink","FormGroup","FormControlLabel","control","Switch","toggleSwitch","handleFinal","buttonDone","marginRight","maxlength","ParticipantsTune","ParticipantsTune_ParticipantsTuneE","PollE","myRef","createRef","window","scrollTo","offsetTop","question","prevQ","push","isHomeClick","Head_PositiveHead","Body_Title","Body_Questions","length","Body_ParticipantsTune","index","_useStyletron","useStyletron","_useStyletron2","slicedToArray","useCss","sizing","scale1200","Poll_PollE","LivePollHead","LivePollHead_HomeIcon","Notification","Badge","invisible","AccountCircle_default","LiveHead","isAdmin","LiveHead_HomeIcon","Head_Notification_Notification","extendedIcon","ListPoll","polls","keys","fillResult","total","yes","no","labels","datasets","hoverBackgroundColor","ListLiveQuestionsResultE","react_chartjs_2_es","liveFeedUpdate","primary","ListLiveQuestionsResult","_ref2","ListLiveQuestionsResult_ListLiveQuestionsResultE","LiveFeed","handleLiveFeed","Head_LiveHead","Live_ListLiveQuestionsResult_ListLiveQuestionsResult","ListToAnswerQuestions","handleRadio","FormControl","RadioGroup","row","labelPlacement","MainSurvey","handleInitialSubmit","Head_LivePollHead","MainSurvey_ListToAnswerQuestions_ListToAnswerQuestions","ListParticipants","listParticipants","updateInvite","Chip","concat","Number","ParticipantsPortalE","tempParticipantName","name","ParticipantsPortal_ListParticipants_ListParticipants","wantParticipant","tempChangeName","disableCurrentParticipant","currentParticipantClickSerial","width","maxWidth","ParticipantsPortal","ParticipantsPortal_ParticipantsPortalE","polulate","dummyData","isAdded","unit","PersonAddDisabled_default","PersonAdd_default","DoneOutline_default","ParticipantsInvitation","ListRequestedParticipants","ListAddedParticipants","LivePollE","pollResult","submit","tempResult","CssBaseline","Container","Live_ListPoll_ListPoll","Live_ParticipantsInvitation_ParticipantsInvitation","Live_ParticipantsPortal_ParticipantsPortal","Live_MainSurvey_MainSurvey","Live_LiveFeed","want","idx","arguments","undefined","LivePoll_LivePollE","App","attachSocketListeners","handleLiveFeedUpdate","handleNewPolls","indexOf","updateLivePolls","updatePollResult","updateLiveFeed","react_router_dom","path","components_Home_Home","exact","components_Poll_Poll","Live_LivePoll","textAlign","Boolean","location","hostname","match","merge","prev","next","participantName","password","handleSubmit","action","handleToggle","handleWarningClick","reducer","combineReducers","update","newQ","splice","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","engine","Styletron","ReactDOM","render","es","integration_react","loading","browser_es5_es","debug","debugAfterHydration","baseui","LightTheme","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ec08afb.chunk.js","sourcesContent":["\r\n\r\n// action creators\r\nexport const handleHomeClick = () => ({\r\n  type: 'HOME_CLICK',\r\n})\r\nexport const handleWarningClick = newContact => ({\r\n  type: 'CLICK_WARN',\r\n  payload: newContact,\r\n})\r\nexport const handleLiveFeedUpdate = data => ({\r\n  type: 'LIVE_FEED_UPDATE',\r\n  payload: data,\r\n})\r\nexport const removeItem = (surface, index) => ({\r\n  type: 'REMOVE_ITEM',\r\n  payload: {surface, index}\r\n})\r\nexport const submit = pollResult => ({\r\n  type: 'SUBMIT',\r\n  payload: pollResult,\r\n})\r\nexport const switchPage = page => ({\r\n  type: 'SWITCH_PAGE',\r\n  payload: page\r\n})\r\nexport const toggleDialog = (surface, dialogSwitch) => ({\r\n  type: 'TOGGLE_DIALOG',\r\n  payload: {surface, dialogSwitch}\r\n})\r\nexport const toggleSwitch = () => ({\r\n  type: 'TOGGLE_SWITCH'\r\n})\r\nexport const updateAdmin = (total) => ({\r\n  type: 'UPDATE_ADMIN',\r\n  payload: total,\r\n})\r\nexport const updateInvite = (want, idx='') => ({\r\n  type: 'UPDATE_INVITE_SWITCHES',\r\n  payload: {want: want, idx: idx},\r\n})\r\nexport const updateLiveFeed = (feed) => ({\r\n  type: 'UPDATE_FEED',\r\n  payload: feed,\r\n})\r\nexport const updateLivePolls = (polls) => ({\r\n  type: 'LIVE_POLLS',\r\n  payload: polls,\r\n})\r\nexport const updateParticipants = list => ({\r\n  type: 'UPDATE_LIST',\r\n  payload: list,\r\n})\r\nexport const updatePollResult = result => ({\r\n  type: 'POLLRESULT',\r\n  payload: result\r\n})\r\nexport const updatePseudonym = (pseudonym) => ({\r\n  type: 'PSEUDONYM',\r\n  payload: pseudonym,\r\n})\r\nexport const updateQ = list => ({\r\n  type: 'UPDATE_Q',\r\n  payload: list,\r\n})\r\nexport const warnClick = () => ({\r\n  type: 'WARN_CLICK',\r\n})\r\n\r\n\r\n\r\n\r\n// async action creator\r\n/*export const logInUser = (username, password) => async dispatch => {\r\n  dispatch({type: LOG_IN_SENT})\r\n  try {\r\n    const token = await login(username, password)\r\n    dispatch({type: LOG_IN_FULFILLED, payload: token})\r\n  } catch (err) {\r\n    dispatch({type: LOG_IN_REJECTED, payload: err.message})\r\n  }\r\n}*/\r\n","import React from 'react';\r\n\r\nimport {styled} from 'baseui';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green, red } from '@material-ui/core/colors';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nexport const Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const GreenRadio = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})(props => <Radio color=\"default\" {...props} />);\r\n\r\nexport const RedRadio = withStyles({\r\n  root: {\r\n    color: red[400],\r\n    '&$checked': {\r\n      color: red[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})(props => <Radio color=\"default\" {...props} />);\r\n\r\nexport const Centered = styled('div', {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '100%',\r\n});\r\n\r\nexport const Rightened = styled('div', {\r\n  display: 'flex',\r\n  float: 'right',\r\n  height: '100%',\r\n});\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './Home.css';\r\nimport {Centered, Rightened} from  '../Styles.jsx';\r\nimport {switchPage, updatePseudonym} from '../../redux/actions';\r\n\r\nimport {Block} from 'baseui/block';\r\n\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:valid + fieldset': {\r\n      borderColor: 'green',\r\n      borderWidth: 2,\r\n    },\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'red',\r\n      borderWidth: 2,\r\n    },\r\n    '& input:valid:focus + fieldset': {\r\n      borderLeftWidth: 6,\r\n      padding: '4px !important', // override inline-style\r\n    },\r\n  },\r\n})(TextField);\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nclass HomeE extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pseudonym: this.props.pseudonym,\r\n      inProgress: false,\r\n      isDisable: false,\r\n    }\r\n  }\r\n  changePseudonym(event) {\r\n    this.setState({pseudonym: event.target.value});     \r\n  }\r\n  checkPseudonym() {\r\n    if(this.state.pseudonym) {\r\n      this.setState({inProgress: true, isDisable: true});\r\n      fetch('https://n-ivehement.herokuapp.com/pseudonym', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          pseudonym: this.state.pseudonym\r\n        })\r\n      })\r\n        .then(response => response.json())\r\n        .then(check => {\r\n            let flag = 0;\r\n            this.setState({inProgress: false, isDisable: false}, () => {\r\n              if(check.isAvailable)\r\n                flag = 1;\r\n            })\r\n            if(flag) { \r\n              this.props.updatePseudonym(this.state.pseudonym);\r\n              return this.props.switchPage(1);}\r\n          }\r\n        )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    if(this.props.onPage === 1) return <Redirect to={'/unique'} />\r\n    else if(this.props.onPage === -1) return <Redirect to={'/live'} />\r\n\r\n\r\n    return (\r\n      <div id=\"home\" className=\"container\">\r\n        <ButtonMaterialUI onClick={() => this.props.switchPage(-1)}>\r\n            <AssignmentIcon\r\n                style={{ fontSize: 30, color: 'green' }} />\r\n                \r\n            \r\n        </ButtonMaterialUI>\r\n\r\n        <Rightened>\r\n        <ButtonMaterialUI>\r\n        \r\n          <a style={{display: \"table-cell\"}}  rel=\"noopener noreferrer\" href=\"https://github.com/jvoltci/aire/blob/master/README.md\" target=\"_blank\">\r\n              <ErrorOutlineIcon/>\r\n          </a>\r\n        \r\n        </ButtonMaterialUI>\r\n        </Rightened>\r\n\r\n        <h3 id=\"u1\">\r\n          <span id=\"u11\">a</span>\r\n          <span id=\"u12\">i</span>\r\n          <span id=\"u13\">r</span>\r\n          <span id=\"u14\">e</span>\r\n        </h3>\r\n\r\n        <div className={classes.root} noValidate>\r\n          <ValidationTextField fullWidth\r\n            onChange={(e) => this.changePseudonym(e)}\r\n            className={classes.margin}\r\n            label=\"Survey name\"\r\n            required\r\n            variant=\"outlined\"\r\n            defaultValue={this.props.pseudonym}\r\n            id=\"validation-outlined-input\"\r\n          />\r\n        </div>\r\n\r\n        <Centered>\r\n          <Block paddingTop=\"210px\" />\r\n          <ButtonMaterialUI size=\"large\" \r\n            disabled={this.state.isDisable}\r\n            color=\"primary\" \r\n            variant=\"contained\" \r\n            onClick={() => this.checkPseudonym()}\r\n            >\r\n            Lets Get Started\r\n          </ButtonMaterialUI>\r\n        </Centered>\r\n        <Block />\r\n        {\r\n            this.state.inProgress ?\r\n\r\n            \r\n              <Centered>\r\n                <CircularProgress className={classes.progress} />\r\n              </Centered>\r\n             :\r\n\r\n            null\r\n          }\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  switchPage: (payload) => dispatch(switchPage(payload)),\r\n  updatePseudonym: (payload) => dispatch(updatePseudonym(payload)),\r\n});\r\n\r\nconst Home = ({rootReducer, switchPage, updatePseudonym}) => {\r\n  const classes = useStyles();\r\n  return(\r\n    <HomeE\r\n    classes={classes}\r\n    onPage={rootReducer.onPage}\r\n    pseudonym={rootReducer.pseudonym}\r\n    switchPage={switchPage}\r\n    updatePseudonym={updatePseudonym}\r\n    />\r\n  )\r\n}\r\n\r\nconst ConnectedLayer = connect(mapStateToProps, mapDispatchToProps)(Home);\r\nexport default ConnectedLayer;","import React from 'react';\r\n\r\nimport {Transition} from  '../Styles.jsx';\r\n\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ThreeSixtyIcon from '@material-ui/icons/ThreeSixty';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst HomeIcon = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nconst PositiveHead = ({ participantNotify, handleHomeClick, toggleDialog, warnClick, warning, onPage, switchPage }) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                    <ButtonMaterialUI onClick={() => handleHomeClick()}>\r\n                        <HomeIcon \r\n                            className={classes.iconHover} \r\n                            style={{ fontSize: 30, color:'#03fc98' }} />\r\n                    </ButtonMaterialUI>\r\n                <Dialog\r\n                    open={warning}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                >\r\n                    <DialogActions>\r\n                        <DialogContentText>\r\n                            <span className={classes.warn}>\r\n                                Are you sure?\r\n                            </span>\r\n                        </DialogContentText>\r\n                        <ButtonMaterialUI \r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => toggleDialog(\"warn\", false)}\r\n                        >\r\n                        Cancel\r\n                        </ButtonMaterialUI>\r\n                        <ButtonMaterialUI\r\n                        onClick={() => {\r\n                          warnClick();\r\n                        }}\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        >\r\n                        Confirm\r\n                        </ButtonMaterialUI>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                \r\n\r\n\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    &nbsp; aire\r\n                </Typography>\r\n                {\r\n                    onPage === 2?\r\n\r\n                    <ButtonMaterialUI onClick={() => {\r\n                        if(onPage !== 1)\r\n                            switchPage(onPage-1)\r\n                    }}>\r\n                        <Grid item xs={8}>\r\n                            <ThreeSixtyIcon \r\n                                className={classes.icon}\r\n                                style={{color:'#03fc98'}}\r\n                            />\r\n                        </Grid>\r\n                    </ButtonMaterialUI> :\r\n\r\n                    null\r\n                }\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n       \r\n    }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    '&:hover': {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(0),\r\n    fontSize: 30,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  warn: `\r\n    color: red;\r\n    padding: 0 30px;\r\n  `,\r\n}));\r\n\r\nexport default PositiveHead;","import React from 'react';\r\n\r\nimport {Centered} from  '../../Styles.jsx';\r\n\r\nimport {Block} from 'baseui/block';\r\nimport {Heading, HeadingLevel} from 'baseui/heading';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst Title = ({pseudonym}) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <Paper>\r\n            <Centered>\r\n\r\n                <Block paddingTop=\"100px\" />\r\n\r\n                <HeadingLevel>\r\n                    <HeadingLevel>\r\n                        <Heading>\r\n                            <Typography className={classes.pseudonym}>\r\n                                {pseudonym}\r\n                            </Typography>\r\n                        \r\n                        </Heading>\r\n                    </HeadingLevel>\r\n                </HeadingLevel>\r\n\r\n            </Centered>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pseudonym: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: \"teal\",\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"3.7rem\"\r\n  }\r\n}));\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        fontSize: '1rem',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass PrimaryDialog extends React.Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Dialog\r\n\t\t        open={this.props.isPrimaryOpen}\r\n\t\t        TransitionComponent={Transition}\r\n\t\t        keepMounted\r\n\t\t        onClose={() => {\r\n\t\t          this.props.toggleDialog(\"primary\", false);\r\n\t\t        }}\r\n\t\t        aria-labelledby=\"alert-dialog-slide-title\"\r\n\t\t    >\r\n\t\t    \t<DialogActions>\r\n\t\t    \t\t<MuiThemeProvider theme={theme}>\r\n\r\n\t\t    \t\t\t<Button \r\n\t\t\t          \tcolor=\"primary\"\r\n\t\t\t          \tvariant=\"contained\"\r\n\t\t\t          \t>\r\n\t\t\t            Question\r\n\t\t\t          \t</Button>\r\n\r\n\t\t\t          \t<Button\r\n\t\t\t          \tonClick={() => {\r\n\t\t\t              this.props.toggleDialog(\"primary\", false);\r\n\t\t\t              this.props.toggleDialog(\"secondary\", true);\r\n\t\t\t            }}\r\n\t\t\t            color=\"primary\"\r\n\t\t\t            variant=\"contained\"\r\n\t\t\t            >\r\n\t\t\t            Poll\r\n\t\t\t          \t</Button>\r\n\t\t\t          \t\r\n    \t\t\t\t</MuiThemeProvider>\r\n\t\t        </DialogActions>\r\n\t\t    </Dialog>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default PrimaryDialog;","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nclass SecondaryDialog extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\task: ''\r\n\t\t}\r\n\t}\r\n\tchangeAsk = (event) => {\r\n\t\tthis.setState({ask: event.target.value})\r\n\t}\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t\r\n\r\n\t\t    <Dialog fullWidth open={this.props.isSecondaryOpen} onClose={() => {\r\n\t\t          this.props.toggleDialog(\"secondary\", false);\r\n\t\t        }} \r\n\t\t        aria-labelledby=\"form-dialog-title\">\r\n\t\t        <DialogContent>\r\n\t\t          <TextField\r\n\t\t\t        id=\"outlined-multiline-flexible\"\r\n\t\t\t        label=\"Questionnaire\"\r\n\t\t\t        multiline\r\n\t\t\t        rowsMax=\"4\"\r\n\t\t\t        onChange={(e) => this.changeAsk(e)}\r\n\t\t\t        margin=\"normal\"\r\n\t\t\t        variant=\"outlined\"\r\n\t\t\t        autoFocus\r\n\t\t\t      />\r\n\t\t        </DialogContent>\r\n\t\t        <DialogActions>\r\n\t\t          <Button onClick={() => this.props.toggleDialog(\"secondary\", false)} color=\"primary\">\r\n\t\t            Cancel\r\n\t\t          </Button>\r\n\t\t          <Button onClick={() => \r\n\t\t          \t\t\t{\r\n\t\t          \t\t\t\tthis.props.toggleDialog(\"secondary\", false);\r\n\t\t          \t\t\t\tthis.props.updatePollQuestions(this.state.ask);\r\n\t\t          \t\t\t}}\r\n\t\t          \t\t\tcolor=\"primary\"\r\n\t\t          \t\t\tvariant=\"contained\"\r\n\t\t          \t\t\t>\r\n\t\t            Confirm\r\n\t\t          </Button>\r\n\t\t        </DialogActions>\r\n\t\t      </Dialog>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SecondaryDialog;","import React from 'react';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ListQuestions = ({ listQnP, removeItem}) => {\r\n    \r\n    const classes = useStyles();\r\n    const tempList = listQnP.map((data, i) => {\r\n        return(\r\n                <div key={i}>\r\n                    <ListItem >\r\n                            <SnackbarContent className={classes.snacker}\r\n                              aria-describedby=\"client-snackbar\"\r\n                              message={\r\n                                <span id=\"client-snackbar\" className={classes.message}>\r\n                                    <span>Q.{i+1} &nbsp;</span>\r\n                                    {data}\r\n                                    <IconButton onClick={() => removeItem(\"questionPolling\", i)} \r\n                                        aria-label=\"delete\" \r\n                                         size=\"small\">\r\n                                      <DeleteIcon id=\"trash\" fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                </span>\r\n                              }\r\n                            />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </div>\r\n            )\r\n    })\r\n    return tempList;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default ListQuestions;","import React from 'react';\r\n\r\nimport { Centered } from '../../Styles.jsx';\r\nimport PrimaryDialog from './PrimaryDialog/PrimaryDialog.jsx';\r\nimport SecondaryDialog from './SecondaryDialog/SecondaryDialog.jsx';\r\nimport ListQuestions from './ListQuestions/ListQuestions.jsx';\r\n\r\nimport {Block} from 'baseui/block';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst Questions = ({myref, listQnP, removeItem, toggleDialog, space, isPrimaryOpen, isSecondaryOpen, updatePollQuestions, listQnPLength, switchPage}) => {\r\n\r\n    const classes = useStyles();\r\n\treturn(\r\n        <React.Fragment>\r\n\r\n            \r\n            <Paper>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n\r\n                    <ListQuestions\r\n                    listQnP={listQnP}\r\n                    removeItem={removeItem}\r\n                    />\r\n\r\n                </List>\r\n            </Paper>\r\n    \r\n            <Centered>\r\n                \r\n                {/*Add Button*/}\r\n                <Block paddingTop=\"500px\" />\r\n                <div id=\"scroll\" myref={myref}>\r\n                    <Fab \r\n                    size=\"large\" \r\n                    onClick={(e) => toggleDialog(\"primary\", true) }\r\n                    color=\"secondary\" \r\n                    aria-label=\"add\" \r\n                    className={classes.fab}\r\n                    >\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </div>\r\n                \r\n                {/*Question or Poll Dialog Box check*/}\r\n                <PrimaryDialog\r\n                space={space} \r\n                isPrimaryOpen={isPrimaryOpen} \r\n                toggleDialog={toggleDialog}\r\n                />\r\n\r\n                {/*Enter Poll Question Dialog Box*/}\r\n                <SecondaryDialog \r\n                isSecondaryOpen={isSecondaryOpen} \r\n                toggleDialog={toggleDialog}\r\n                updatePollQuestions={updatePollQuestions.bind(this)}\r\n                />\r\n\r\n                \r\n            </Centered> \r\n\r\n            {/*Next Button on page 1*/}\r\n            <Centered>\r\n                <ButtonMaterialUI\r\n                    onClick={() => {\r\n                        if(listQnPLength > 0)\r\n                            switchPage(2)\r\n                    }}\r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    className={classes.button}>\r\n                    Next\r\n                    <Icon className={classes.rightIcon}>send</Icon>\r\n                </ButtonMaterialUI>\r\n            </Centered>\r\n        </React.Fragment> \r\n\t)\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  fab: {\r\n    margin: theme.spacing(1),\r\n    /*position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',*/\r\n  }\r\n}));\r\n\r\nexport default Questions;","import io from 'socket.io-client';\r\n\r\nconst connect = () => {\r\n  Socket.socket = io.connect('https://n-ivehement.herokuapp.com');\r\n}\r\n\r\nconst on = (eventName, callback) => {\r\n  if (Socket.socket) {\r\n    Socket.socket.on(eventName, data => {\r\n      callback(data);\r\n    });\r\n  }\r\n}\r\n\r\nconst emit = (eventName, data) => {\r\n  if (Socket.socket) {\r\n    Socket.socket.emit(eventName, data);\r\n  }\r\n}\r\n\r\nconst removeListener = (eventName) => {\r\n  if (Socket.socket) {\r\n    Socket.socket.removeListener(eventName);\r\n  }\r\n}\r\n\r\nconst Socket = {\r\n  connect,\r\n  on,\r\n  emit,\r\n  removeListener,\r\n  socket: null\r\n}\r\n\r\nexport default Socket;","import React from 'react';\r\nimport Socket from '../../../redux/Socket';\r\n\r\nimport { Centered } from '../../Styles.jsx';\r\n\r\nimport {Block} from 'baseui/block';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst initialState = {\r\n    tempTotalParticipants: 0,\r\n}\r\n\r\nclass ParticipantsTuneE extends React.Component {\r\n    constructor() {\r\n        super();\r\n        if(!localStorage.getItem('tempTotalParticipants')) {\r\n          localStorage.setItem('tempTotalParticipants', JSON.stringify(initialState))\r\n          this.state = initialState;\r\n        }\r\n        else {\r\n          this.state = JSON.parse(localStorage.getItem('tempTotalParticipants'));\r\n        }\r\n    }\r\n\r\n    handleFinal(totalParticipants) {\r\n        this.props.updateAdmin(totalParticipants);\r\n        this.props.switchPage(6);\r\n        Socket.emit('le poll', {\r\n            isSecure: this.props.secureState,\r\n            pseudonym: this.props.pseudonym,\r\n            questions: this.props.listQnP,\r\n            totalParticipants: totalParticipants,\r\n        })\r\n      }\r\n\r\n    handleParticipants(event) {\r\n      this.setState({tempTotalParticipants: event.target.value}, () => {\r\n        this.props.updateAdmin(this.state.tempTotalParticipants);\r\n      })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Paper>\r\n                    <Centered>\r\n                        <TextField\r\n                        id=\"outlined-number\"\r\n                        label=\"Participants\"\r\n                        onChange={(e) => this.handleParticipants(e)}\r\n                        type=\"number\"\r\n                        className={this.props.classes.textField}\r\n                        defaultValue={this.props.totalParticipants}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        autoFocus\r\n                        />\r\n                        <FormGroup>\r\n                          <FormControlLabel\r\n                            control={\r\n                                <Switch size=\"medium\" \r\n                                checked={this.props.secureState} \r\n                                onClick={() => this.props.toggleSwitch()} \r\n                                />}\r\n                            label=\"Secure\"\r\n                          />\r\n                        </FormGroup>\r\n                    </Centered>\r\n                </Paper>\r\n                {/*Done Button on Page 2 Participants*/}\r\n                <Centered>\r\n                        <Block paddingTop=\"300px\" />\r\n                        <ButtonMaterialUI\r\n                            onClick={() => {\r\n                                if(this.state.tempTotalParticipants > 1)\r\n                                    return this.handleFinal(this.state.tempTotalParticipants)\r\n                            }}\r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            className={this.props.classes.buttonDone}>\r\n                            Done\r\n                        </ButtonMaterialUI>\r\n                    \r\n                </Centered>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonDone: {\r\n    margin: theme.spacing(1),\r\n    fontSize: 25,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    maxlength: 200,\r\n  },\r\n}));\r\n\r\nconst ParticipantsTune =({ pseudonym, listQnP, secureState, totalParticipants, switchPage, toggleSwitch, isSecure, updateAdmin}) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <ParticipantsTuneE\r\n        classes={classes}\r\n        isSecure={isSecure}\r\n        pseudonym={pseudonym}\r\n        listQnP={listQnP}\r\n        secureState={secureState}\r\n        switchPage={switchPage}\r\n        totalParticipants={totalParticipants}\r\n        toggleSwitch={toggleSwitch}\r\n        updateAdmin={updateAdmin}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ParticipantsTune;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { toggleDialog, handleHomeClick, warnClick, switchPage, removeItem, toggleSwitch, updateQ, updateAdmin} from '../../redux/actions';\r\nimport './Poll.css'\r\n\r\nimport PositiveHead from '../Head/PositiveHead.jsx';\r\nimport Title from './Body/Title.jsx';\r\nimport Questions from './Body/Questions.jsx';\r\nimport ParticipantsTune from './Body/ParticipantsTune.jsx';\r\n\r\n \r\nimport {useStyletron} from 'baseui';\r\n\r\nclass PollE extends React.Component {\r\n \r\n    constructor() {\r\n        super();\r\n        this.myRef = React.createRef();\r\n    }\r\n \r\n    componentDidMount() {\r\n        window.scrollTo(0, this.myRef.offsetTop);\r\n    }\r\n\r\n    updatePollQuestions(question) {\r\n        const prevQ = this.props.listQnP;\r\n        prevQ.push(question);\r\n        this.props.updateQ(prevQ);\r\n    }\r\n    render() {\r\n        if(this.props.isHomeClick) {\r\n            return (<Redirect to={'/'} />)\r\n        }\r\n        if(this.props.onPage === 0) return <Redirect to='/' />\r\n        if(this.props.onPage === 6) return <Redirect to='/live' />\r\n\r\n        return(\r\n            <div>\r\n                <PositiveHead\r\n                participantNotify={this.props.participantNotify}\r\n                toggleDialog={this.props.toggleDialog}\r\n                handleHomeClick={this.props.handleHomeClick}\r\n                warnClick={this.props.warnClick}\r\n                warning={this.props.warning}\r\n                onPage={this.props.onPage}\r\n                switchPage={this.props.switchPage}\r\n                />\r\n\r\n                <Title pseudonym={this.props.pseudonym}/>\r\n\r\n                <div>\r\n                    {\r\n                        this.props.onPage === 1 ?\r\n\r\n                        <Questions\r\n                        myref={this.myRef}\r\n                        listQnP={this.props.listQnP}\r\n                        removeItem={this.props.removeItem}\r\n                        toggleDialog={this.props.toggleDialog}\r\n                        space={this.space}\r\n                        isPrimaryOpen={this.props.isPrimaryOpen}\r\n                        isSecondaryOpen={this.props.isSecondaryOpen}\r\n                        updatePollQuestions={this.updatePollQuestions.bind(this)}\r\n                        listQnPLength={this.props.listQnP.length}\r\n                        switchPage={this.props.switchPage}\r\n                        /> :\r\n\r\n                        <ParticipantsTune\r\n                        isSecure={this.props.isSecure}\r\n                        pseudonym={this.props.pseudonym}\r\n                        listQnP={this.props.listQnP}\r\n                        secureState={this.props.secureState}\r\n                        switchPage={this.props.switchPage}\r\n                        toggleSwitch={this.props.toggleSwitch}\r\n                        updateAdmin={this.props.updateAdmin}\r\n                        totalParticipants={this.props.totalParticipants}\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleDialog: (surface, dialogSwitch) => dispatch(toggleDialog(surface, dialogSwitch)),\r\n  handleHomeClick: (payload) => dispatch(handleHomeClick(payload)),\r\n  warnClick: (payload) => dispatch(warnClick(payload)),\r\n  switchPage: (payload) => dispatch(switchPage(payload)),\r\n  removeItem: (payload) => dispatch(removeItem(payload)),\r\n  toggleSwitch: (payload) => dispatch(toggleSwitch(payload)),\r\n  updateQ: (payload) => dispatch(updateQ(payload)),\r\n  updateAdmin: (payload) => dispatch(updateAdmin(payload)),\r\n});\r\n\r\nconst Poll = ({rootReducer, toggleDialog, handleHomeClick, warnClick, switchPage, removeItem, toggleSwitch, updateQ, updateAdmin}) => {\r\n    const [useCss, theme] = useStyletron();\r\n    const space = useCss({marginLeft: theme.sizing.scale1200});\r\n    return(\r\n        <PollE\r\n        space={space}\r\n        listQnP={rootReducer.listQnP}\r\n        onPage={rootReducer.onPage}\r\n        participantNotify={rootReducer.participantNotify}\r\n        warning={rootReducer.warning}\r\n        pseudonym={rootReducer.pseudonym}\r\n        isPrimaryOpen={rootReducer.isPrimaryOpen}\r\n        isSecondaryOpen={rootReducer.isSecondaryOpen}\r\n        isSecure={rootReducer.isSecure}\r\n        secureState={rootReducer.secureState}\r\n        totalParticipants={rootReducer.totalParticipants}\r\n\r\n        toggleDialog={toggleDialog}\r\n        handleHomeClick={handleHomeClick}\r\n        warnClick={warnClick}\r\n        switchPage={switchPage}\r\n        removeItem={removeItem}\r\n        toggleSwitch={toggleSwitch}\r\n        updateQ={updateQ}\r\n        updateAdmin={updateAdmin}\r\n        />\r\n    )\r\n}\r\n\r\nconst ConnectedLayer = connect(mapStateToProps, mapDispatchToProps)(Poll);\r\n\r\nexport default ConnectedLayer;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Centered} from  '../Styles.jsx';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst HomeIcon = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nconst LivePollHead = ({onPage, switchPage}) => {\r\n    const classes = useStyles();\r\n\r\n    if(onPage === 0) return <Redirect to={'/'} />\r\n\r\n    return(\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                        <ButtonMaterialUI onClick={() => switchPage(0)}>\r\n                            <HomeIcon \r\n                                className={classes.iconHover} \r\n                                style={{ fontSize: 30, color:'#03fc98' }} />\r\n                        </ButtonMaterialUI>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        &nbsp; aire\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Paper>\r\n              \r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  <Centered>\r\n                     Live Polls\r\n                  </Centered>\r\n                </Typography>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    '&:hover': {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default LivePollHead;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Notification = ({participantNotify, switchPage}) => {\r\n  \tconst classes = useStyles();\r\n\treturn(\r\n\t\t<ButtonMaterialUI\r\n\t\tonClick={() => switchPage(3)}\r\n\t\t>\r\n\t\t\t<Badge color=\"secondary\" className={classes.margin} invisible={participantNotify} variant=\"dot\">\r\n\t          <AccountCircleIcon \r\n\t          style={{color:'#03fc98'}}\r\n\t          />\r\n\t        </Badge>\r\n\t\t</ButtonMaterialUI>\r\n\t)\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nimport {Transition} from  '../Styles.jsx';\r\nimport Notification from './Notification/Notification.jsx';\r\n\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ThreeSixtyIcon from '@material-ui/icons/ThreeSixty';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst HomeIcon = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\n\r\nconst LiveHead = ({ isAdmin, participantNotify, handleHomeClick, toggleDialog, warnClick, warning, onPage, switchPage }) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                    <ButtonMaterialUI onClick={() => handleHomeClick()}>\r\n                        <HomeIcon \r\n                            className={classes.iconHover} \r\n                            style={{ fontSize: 30, color:'#03fc98' }} />\r\n                    </ButtonMaterialUI>\r\n                <Dialog\r\n                    open={warning}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                >\r\n                    <DialogActions>\r\n                        <DialogContentText>\r\n                            <span className={classes.warn}>\r\n                                Are you sure?\r\n                            </span>\r\n                        </DialogContentText>\r\n                        <ButtonMaterialUI \r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => toggleDialog(\"warn\", false)}\r\n                        >\r\n                        Cancel\r\n                        </ButtonMaterialUI>\r\n                        <ButtonMaterialUI\r\n                        onClick={() => {\r\n                          warnClick();\r\n                        }}\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        >\r\n                        Confirm\r\n                        </ButtonMaterialUI>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                \r\n\r\n\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    &nbsp; aire\r\n                </Typography>\r\n                \r\n                        {\r\n                            isAdmin === 1 ?\r\n                            <div>\r\n                                {\r\n                                    onPage === 6 ?\r\n                                    <Notification\r\n                                    switchPage={switchPage}\r\n                                    participantNotify={participantNotify}\r\n                                    /> :\r\n                                    <ButtonMaterialUI onClick={() => {\r\n                                        switchPage(6)\r\n                                    }}>\r\n                                        <Grid item xs={8}>\r\n                                            <ThreeSixtyIcon \r\n                                                className={classes.icon}\r\n                                                style={{color:'#03fc98'}}\r\n                                            />\r\n                                        </Grid>\r\n                                    </ButtonMaterialUI>\r\n                                }\r\n                            </div> :\r\n                            null\r\n                        }\r\n                \r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n       \r\n    }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    '&:hover': {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(0),\r\n    fontSize: 30,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  warn: `\r\n    color: red;\r\n    padding: 0 30px;\r\n  `,\r\n}));\r\n\r\n\r\nexport default LiveHead;","import React from 'react';\r\n\r\n\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst ListPoll = ({polls, switchPage, updatePseudonym, updateParticipants}) => {\r\n\tconst classes = useStyles();\r\n\tif(!polls) return null;\r\n\r\n\tconst data = Object.keys(polls).map((pseudonym, i) => {\r\n\t\treturn(\r\n\t\t\t<ListItem key={i} >\r\n\t\t            <SnackbarContent\r\n\t\t            className={classes.snacker}\r\n\t\t              aria-describedby=\"client-snackbar\"\r\n\t\t              message={\r\n\t\t                <Badge \r\n\t\t                className={classes.margin}\r\n\t\t                invisible={!polls[pseudonym]}\r\n\t\t                color='secondary'\r\n\t\t                variant=\"dot\" \r\n\t\t                >\r\n\t\t\t\t\t        <Typography className={classes.padding}>\r\n\t\t\t\t\t        {pseudonym}\r\n\t\t\t\t\t        </Typography>\r\n\t\t\t\t\t    </Badge>\r\n\t\t              }\r\n\t\t            />\r\n\t\t            <Button\r\n\t\t            onClick={() => {\r\n\t\t            \tfetch('https://n-ivehement.herokuapp.com/listparticipants', {\r\n\t\t\t\t        method: 'post',\r\n\t\t\t\t        headers: {'Content-Type': 'application/json'},\r\n\t\t\t\t        body: JSON.stringify({\r\n\t\t\t\t          pseudonym: pseudonym\r\n\t\t\t\t        })\r\n\t\t\t\t      })\r\n\t\t\t\t        .then(response => response.json())\r\n\t\t\t\t        .then(list => {\r\n\t\t\t\t        \tupdatePseudonym(pseudonym);\r\n\t\t\t\t        \tupdateParticipants(list);\r\n\r\n\t\t\t\t        \tif(list) switchPage(4);\r\n\t\t\t\t        })\r\n\t\t            }}\r\n\t\t            className={classes.margin} size=\"small\">\r\n\t                \tEnter\r\n\t                </Button>\r\n\r\n\r\n\t\t    </ListItem>\r\n\t\t)\r\n\t})\r\n\treturn data;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n   padding: {\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  snacker: {\r\n  \tbackgroundColor: '#16c73f',\r\n  }\r\n}));\r\n\r\n\r\nexport default ListPoll;","import React from 'react';\r\n\r\nimport {Doughnut} from 'react-chartjs-2';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n/*const getRandomInt = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}*/\r\n\r\nconst fillResult = ({yes, no}, total) => ({\r\n  labels: [\r\n    'Neutral',\r\n    'Yes',\r\n    'No'\r\n  ],\r\n  datasets: [{\r\n    data: [total-(yes+no), yes, no],\r\n    backgroundColor: [\r\n    '#CCC',\r\n    '#36A2EB',\r\n    '#FFCE56'\r\n    ],\r\n    hoverBackgroundColor: [\r\n    '#FF6384',\r\n    '#36A2EB',\r\n    '#FFCE56'\r\n    ]\r\n  }]\r\n});\r\n\r\nclass ListLiveQuestionsResultE extends React.Component {\r\n\r\n    render() {\r\n      const lisLivetQnPResult = this.props.listQnP.map((data, i) => {\r\n        return(\r\n                  <Paper key={i}>\r\n                      <ListItem >\r\n                              <SnackbarContent className={this.props.classes.snacker}\r\n                                aria-describedby=\"client-snackbar\"\r\n                                message={\r\n                                  <span id=\"client-snackbar\" className={this.props.classes.message}>\r\n                                      <span>Q.{i+1} &nbsp;</span>\r\n                                      {data}\r\n                                  </span>\r\n                                }\r\n                              />\r\n                      </ListItem>\r\n                      <Doughnut data={() => {\r\n                        if(this.props.liveFeedUpdate[i]) {\r\n                          return fillResult(this.props.liveFeedUpdate[i], this.props.total)\r\n                        }\r\n                        else\r\n                          return fillResult({yes: 0, no: 0}, this.props.totalParticipants)\r\n                      }} />\r\n                      <Divider />\r\n                  </Paper>\r\n              )\r\n      })\r\n      return lisLivetQnPResult;\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst ListLiveQuestionsResult = ({ listQnP, liveFeedUpdate, total, totalParticipants}) => {\r\n  const classes = useStyles();\r\n  return(\r\n    <ListLiveQuestionsResultE\r\n    classes={classes}\r\n    listQnP={listQnP}\r\n    liveFeedUpdate={liveFeedUpdate}\r\n    total={total}\r\n    totalParticipants={totalParticipants}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ListLiveQuestionsResult;","import React from 'react';\r\n\r\nimport {Centered} from '../Styles.jsx';\r\nimport LiveHead from '../Head/LiveHead.jsx';\r\nimport ListLiveQuestionsResult from './ListLiveQuestionsResult/ListLiveQuestionsResult.jsx'\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\n\r\nclass LiveFeed extends React.Component {\r\n\r\n    componentDidMount() {\r\n        //if(this.props.onPage === 0) this.props.switchPage(this.props.pseudonym, 0)\r\n        /*this.props.handleLiveFeed(this.props.pseudonym);*/\r\n        this.handleLiveFeed(this.props.pseudonym)\r\n    }\r\n\r\n    handleLiveFeed(pseudonym) {\r\n        if(!this.props.liveFeedUpdate) {\r\n          fetch('https://n-ivehement.herokuapp.com/fetchlivefeed', {\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            pseudonym: pseudonym\r\n          })\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this.props.liveFeedUpdate(data);\r\n          })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n        return (\r\n          <Paper>\r\n\r\n            <LiveHead\r\n            handleHomeClick={this.props.handleHomeClick}\r\n            warnClick={this.props.warnClick}\r\n            isAdmin={this.props.isAdmin}\r\n            onPage={this.props.onPage}\r\n            participantNotify={this.props.participantNotify}\r\n            pseudonym={this.props.pseudonym}\r\n            switchPage={this.props.switchPage}\r\n            toggleDialog={this.props.toggleDialog}\r\n            warning={this.props.warning}\r\n            />\r\n\r\n            <Centered>\r\n            \t<h2>{this.props.pseudonym} | Live Poll</h2>\r\n            </Centered>\r\n\r\n            <ListLiveQuestionsResult \r\n            listQnP={this.props.listQnP}\r\n            liveFeedUpdate={this.props.liveFeedUpdate}\r\n            total={this.props.total}\r\n            totalParticipants={this.props.totalParticipants}\r\n            />\r\n            \r\n          </Paper>\r\n        );\r\n      }\r\n}\r\n\r\nexport default LiveFeed;","import React from 'react';\r\n\r\nimport { RedRadio, GreenRadio } from '../../../Styles.jsx';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ListToAnswerQuestions = ({ listQnP, handleRadio }) => {\r\n    \r\n    const classes = useStyles();\r\n    const tempList = listQnP.map((data, i) => {\r\n        return(\r\n                <div key={i}>\r\n                    <ListItem >\r\n                            <SnackbarContent className={classes.snacker}\r\n                              aria-describedby=\"client-snackbar\"\r\n                              message={\r\n                                <span id=\"client-snackbar\" className={classes.message}>\r\n                                    <span>Q.{i+1} &nbsp;</span>\r\n                                    {data}\r\n                                </span>\r\n                              }\r\n                            />\r\n                    </ListItem>\r\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                        <RadioGroup row\r\n                        className={classes.group}\r\n                        onChange={(e) => handleRadio(e, i)}\r\n                        >\r\n\t                        <FormControlLabel\r\n\t                        value=\"1\"\r\n\t                        control={ <GreenRadio/> }\r\n\t                        label=\"Yes\"\r\n\t                        labelPlacement=\"end\"\r\n\t                        />\r\n\r\n\t                        <FormControlLabel\r\n\t                        value=\"0\"\r\n\t                        control={ <RedRadio/> }\r\n\t                        label=\"No\"\r\n\t                        labelPlacement=\"end\"\r\n\t                        />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <Divider />\r\n                </div>\r\n            )\r\n    })\r\n    return tempList;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default ListToAnswerQuestions;","import React from 'react';\r\n\r\nimport {Centered} from '../../Styles.jsx';\r\nimport LivePollHead from '../../Head/LivePollHead.jsx';\r\nimport Title from '../../Poll/Body/Title.jsx'\r\nimport ListToAnswerQuestions from './ListToAnswerQuestions/ListToAnswerQuestions.jsx'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst MainSurvey = ({\r\n\thandleRadio,\r\n\thandleInitialSubmit,\r\n\tlistQnP,\r\n\tonPage,\r\n\tpseudonym,\r\n\tswitchPage,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<LivePollHead\r\n\t\t\tonPage={onPage}\r\n\t\t\tswitchPage={switchPage.bind(this)}\r\n\t\t\t/> \r\n\r\n\t\t\t<Title\r\n\t\t\tpseudonym={pseudonym}\r\n\t\t\t/>\r\n\r\n\t\t\t<ListToAnswerQuestions\r\n\t\t\thandleRadio={handleRadio.bind(this)}\r\n\t\t\tlistQnP={listQnP}\r\n\t\t\t/>\r\n\r\n\t\t\t<Centered>\r\n                <Button\r\n                    onClick={() => handleInitialSubmit()}\r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    className={classes.button}>\r\n                    Submit\r\n                </Button>\r\n            </Centered>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default MainSurvey;","import React from 'react';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ListParticipants = ({ listParticipants, updateInvite}) => {\r\n    const classes = useStyles();\r\n    const tempList = Object.keys(listParticipants).map((id, i) =>{\r\n        if(listParticipants[id])\r\n            return(\r\n                <div key={i}>\r\n                    <ListItem disabled button>\r\n                        <Chip \r\n                        className={classes.message}\r\n                        label={`${Number(id)+1} | ${listParticipants[id]}`} \r\n                        color=\"primary\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </div>\r\n            )\r\n        else\r\n            return(\r\n                <div key={i}>\r\n                    <ListItem onClick={() => updateInvite(true, i)} button>\r\n                        <Chip label={Number(id)+1} color=\"primary\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </div>\r\n            )\r\n        } );\r\n\r\n        return tempList;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default ListParticipants;","import React from 'react';\r\n\r\nimport {Centered} from  '../../Styles.jsx';\r\nimport ListParticipants from './ListParticipants/ListParticipants.jsx';\r\nimport Socket from '../../../redux/Socket';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport ButtonMaterialUI from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nclass ParticipantsPortalE extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tempParticipantName: '',\r\n        }\r\n    }\r\n\r\n    tempChangeName(e) {\r\n        this.setState({tempParticipantName: e.target.value});\r\n    }\r\n\r\n    disableCurrentParticipant(index, name) {\r\n      const listParticipants = this.props.listParticipants;\r\n      listParticipants[index] = name;\r\n      Socket.emit('update serverListParticipants', {\r\n            pseudonym: this.props.pseudonym,\r\n            index: index,\r\n            name: name\r\n        })\r\n\r\n      this.props.updateParticipants(listParticipants);\r\n\r\n      fetch('https://n-ivehement.herokuapp.com/fetchq', {\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            pseudonym: this.props.pseudonym\r\n          })\r\n        })\r\n          .then(response => response.json())\r\n          .then(list => {\r\n            this.props.updateQ(list);\r\n            this.props.switchPage(5);\r\n          })\r\n    }\r\n    \r\n    render() {\r\n        const {classes} = this.props;\r\n        return(\r\n            <Centered>\r\n\r\n                <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n\r\n                    <ListParticipants\r\n                    listParticipants={this.props.listParticipants}\r\n                    updateInvite={this.props.updateInvite}\r\n                    />\r\n\r\n                </List>\r\n\r\n                <Dialog fullWidth open={this.props.wantParticipant} onClose={() => {\r\n                        this.props.updateInvite(false)\r\n                    }} \r\n                    aria-labelledby=\"form-dialog-title\">\r\n                    <DialogContent>\r\n                      <TextField\r\n                        required\r\n                        id=\"outlined-multiline-flexible\"\r\n                        label=\"Name\"\r\n                        onChange={(e) => this.tempChangeName(e)}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        autoFocus\r\n                      />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <ButtonMaterialUI \r\n                        onClick={() => this.props.updateInvite(false)}\r\n                        color=\"primary\">\r\n                        Cancel\r\n                      </ButtonMaterialUI>\r\n                      <ButtonMaterialUI onClick={() => \r\n                                {   \r\n                                    if(this.state.tempParticipantName) {\r\n                                        this.disableCurrentParticipant(this.props.currentParticipantClickSerial, this.state.tempParticipantName);\r\n                                        this.props.updateInvite(false)\r\n                                    }\r\n                                }\r\n                            }\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                >\r\n                        Register\r\n                      </ButtonMaterialUI>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Centered>\r\n        )\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '360px',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst ParticipantsPortal = ({currentParticipantClickSerial, listParticipants, pseudonym, switchPage, updateQ, updateInvite, wantParticipant, updateParticipants}) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <ParticipantsPortalE\r\n        classes={classes}\r\n        currentParticipantClickSerial={currentParticipantClickSerial}\r\n        listParticipants={listParticipants}\r\n        pseudonym={pseudonym}\r\n        wantParticipant={wantParticipant}\r\n\r\n        switchPage={switchPage}\r\n        updateQ={updateQ}\r\n        updateInvite={updateInvite}\r\n        updateParticipants={updateParticipants}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ParticipantsPortal;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\n\r\nconst polulate = {\r\n    dummyData: [\r\n        {\r\n            index: 0,\r\n            name: 'Jai',\r\n            isAdded: true\r\n        },\r\n        {\r\n            index: 1,\r\n            name: 'John',\r\n            isAdded: false\r\n        },\r\n        {\r\n            index: 2,\r\n            name: 'Jane',\r\n            isAdded: false\r\n        },\r\n        {\r\n            index: 3,\r\n            name: 'Jia',\r\n            isAdded: false\r\n        },\r\n    ]\r\n}\r\n\r\nconst ListParticipants = () => {\r\n    const classes = useStyles();\r\n    const tempList = polulate.dummyData.map((unit, i) => {\r\n        if(!unit.isAdded)\r\n            return(\r\n                <div key={i}>\r\n                    <ListItem>\r\n                        <SnackbarContent className={classes.snacker}\r\n                          aria-describedby=\"client-snackbar\"\r\n                          message={\r\n                            <span id=\"client-snackbar\" className={classes.message}>\r\n                                {`${unit.index+1} | ${unit.name}`}\r\n                            </span>\r\n                          }\r\n                        />\r\n\r\n                        <IconButton\r\n                        aria-label=\"delete\" \r\n                        size=\"small\"\r\n                        style={{ color: 'red' }}\r\n                        >\r\n                            <PersonAddDisabledIcon />\r\n                        </IconButton>\r\n                        <Icon\r\n                        fontSize='large'\r\n                        style={{ color: 'white'}}\r\n                        >\r\n                        </Icon>\r\n                        <IconButton \r\n                        aria-label=\"delete\" \r\n                        size=\"small\"\r\n                        style={{ color: 'blue' }}\r\n                        >\r\n                            <PersonAddIcon />\r\n                        </IconButton>\r\n                        \r\n                    </ListItem>\r\n                </div>\r\n            )\r\n        else return null\r\n    } );\r\n    return tempList;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default ListParticipants;","import React from 'react';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst polulate = {\r\n    dummyData: [\r\n        {\r\n            index: 0,\r\n            name: 'Jai',\r\n            isAdded: true\r\n        },\r\n        {\r\n            index: 1,\r\n            name: 'John',\r\n            isAdded: false\r\n        },\r\n        {\r\n            index: 2,\r\n            name: 'Jane',\r\n            isAdded: false\r\n        },\r\n        {\r\n            index: 3,\r\n            name: 'Jia',\r\n            isAdded: false\r\n        },\r\n    ]\r\n}\r\n\r\nconst ListParticipants = () => {\r\n    const classes = useStyles();\r\n    const tempList = polulate.dummyData.map((unit, i) => {\r\n        if(unit.isAdded)\r\n            return(\r\n                <div key={i}>\r\n                    <ListItem>\r\n                        <SnackbarContent className={classes.snacker}\r\n                          aria-describedby=\"client-snackbar\"\r\n                          message={\r\n                            <span id=\"client-snackbar\" className={classes.message}>\r\n                                {`${unit.index+1} | ${unit.name}`}\r\n                            </span>\r\n                          }\r\n                        />\r\n                        <Icon\r\n                        fontSize='large'\r\n                        style={{ color: 'white'}}\r\n                        >\r\n                        </Icon>\r\n                        <Icon\r\n                        style={{ color: 'green' }}\r\n                        >\r\n                            <DoneOutlineIcon/>\r\n                        </Icon>\r\n                        <Icon\r\n                        fontSize='large'\r\n                        style={{ color: 'white'}}\r\n                        >\r\n                        </Icon>\r\n                    </ListItem>\r\n                </div>\r\n            )\r\n        else\r\n            return null\r\n    } );\r\n    return tempList;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default ListParticipants;","import React from 'react';\r\n\r\nimport Title from '../../Poll/Body/Title.jsx'\r\nimport ListRequestedParticipants from './ListRequestedParticipants/ListRequestedParticipants.jsx';\r\nimport ListAddedParticipants from './ListAddedParticipants/ListAddedParticipants.jsx';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ParticipantsInvitation = ({pseudonym}) => {\r\n\tconst classes = useStyles();\r\n\treturn(\r\n\t\t<div>\r\n\r\n\t\t\t<Title\r\n\t\t\tpseudonym={pseudonym}\r\n\t\t\t/>\r\n\r\n\t\t\t<Paper>\r\n\t\t\t\t<List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n\r\n\t                <ListRequestedParticipants\r\n\t                />\r\n\r\n\t            </List>\r\n\t\t\t</Paper>\r\n\r\n\t\t\t\r\n\r\n\t\t\t<Paper>\r\n\t\t\t\t<List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n\r\n\t                <ListAddedParticipants\r\n\t                />\r\n\r\n\t            </List>\r\n\t\t\t</Paper>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '360px',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default ParticipantsInvitation;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport Socket from '../../redux/Socket';\r\nimport {submit, switchPage, handleHomeClick, warnClick, toggleDialog, updateInvite, updateQ, updatePseudonym, updateParticipants} from '../../redux/actions';\r\n\r\nimport {Block} from 'baseui/block';\r\n\r\nimport LivePollHead from '../Head/LivePollHead.jsx';\r\nimport LiveHead from '../Head/LiveHead.jsx';\r\nimport ListPoll from './ListPoll/ListPoll.jsx';\r\nimport LiveFeed from './LiveFeed.jsx';\r\nimport MainSurvey from './MainSurvey/MainSurvey.jsx'\r\nimport ParticipantsPortal from './ParticipantsPortal/ParticipantsPortal.jsx';\r\nimport ParticipantsInvitation from './ParticipantsInvitation/ParticipantsInvitation.jsx'\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport List from '@material-ui/core/List';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n  },\r\n  snacker: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nclass LivePollE extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tpollResult: {},\r\n\t\t}\r\n\t}\r\n\thandleInitialSubmit() {\r\n\t\tif(Object.keys(this.state.pollResult).length === this.props.listQnP.length) {\r\n\t\t\tSocket.emit('update pollResult', {\r\n\t\t      pollResult: this.state.pollResult,\r\n\t\t      pseudonym: this.props.pseudonym\r\n\t\t    });\r\n\t\t\tthis.props.submit(this.state.pollResult);\r\n\t\t\tthis.props.switchPage(6);\r\n\t\t}\r\n\t}\r\n\thandleRadio(e, i) {\r\n\t\tconst tempResult = this.state.pollResult;\r\n\t\ttempResult[i] = e.target.value;\r\n\t\tthis.setState({pollResult: tempResult});\r\n\t}\r\n\trender() {\r\n\t\tif(this.props.onPage === 0) return <Redirect to={'/'} />\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.onPage === -1 ?\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<LivePollHead\r\n\t\t\t\t\t\tonPage={this.props.onPage}\r\n\t\t\t\t\t\tswitchPage={this.props.switchPage}\r\n\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\r\n\t\t\t            <React.Fragment>\r\n\t\t\t              <CssBaseline />\r\n\t\t\t              <Container maxWidth=\"sm\">\r\n\t\t\t                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n\t\t\t                    <Block paddingTop=\"50px\" />\r\n\r\n\t\t\t                        <ListPoll\r\n\t\t\t                        polls={this.props.polls}\r\n\t\t\t                        switchPage={this.props.switchPage}\r\n\t\t\t                        updatePseudonym={this.props.updatePseudonym}\r\n\t\t\t                        updateParticipants={this.props.updateParticipants}\r\n\t\t\t                        />\r\n\r\n\t\t\t                    <Block paddingTop=\"50px\" />\r\n\t\t\t                </List>\r\n\t\t\t              </Container>\r\n\t\t\t            </React.Fragment>\r\n\r\n\t\t\t\t\t</div> :\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.onPage === 3 ?\r\n\r\n\t\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t\t\t<LiveHead\r\n\t\t\t\t\t            handleHomeClick={this.props.handleHomeClick}\r\n\t\t\t\t\t            warnClick={this.props.warnClick}\r\n\t\t\t\t\t            isAdmin={this.props.isAdmin}\r\n\t\t\t\t\t            onPage={this.props.onPage}\r\n\t\t\t\t\t            participantNotify={this.props.participantNotify}\r\n\t\t\t\t\t            pseudonym={this.props.pseudonym}\r\n\t\t\t\t\t            switchPage={this.props.switchPage}\r\n\t\t\t\t\t            toggleDialog={this.props.toggleDialog}\r\n\t\t\t\t\t            warning={this.props.warning}\r\n\t\t\t\t\t            />\r\n\r\n\t\t\t\t\t            <ParticipantsInvitation\r\n\t\t\t\t\t            pseudonym={this.props.pseudonym}\r\n\t\t\t\t\t            />\r\n\r\n\t\t\t\t\t\t\t</div> :\r\n\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.onPage === 4 ?\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<LivePollHead\r\n\t\t\t\t\t\t\t\t\tonPage={this.props.onPage}\r\n\t\t\t\t\t\t\t\t\tswitchPage={this.props.switchPage}\r\n\t\t\t\t\t\t\t\t\t/> \r\n\r\n\t\t\t                        <ParticipantsPortal\r\n\t\t\t                        currentParticipantClickSerial={this.props.currentParticipantClickSerial}\r\n\t\t\t                        listParticipants={this.props.listParticipants}\r\n\t\t\t                        pseudonym={this.props.pseudonym}\r\n\t\t\t                        wantParticipant={this.props.wantParticipant}\r\n\t\t\t                        switchPage={this.props.switchPage}\r\n\t\t\t                        updateQ={this.props.updateQ}\r\n\t\t\t                        updateInvite={this.props.updateInvite}\r\n\t\t\t                        updateParticipants={this.props.updateParticipants}\r\n\t\t\t                        />\r\n\t\t\t\t\t\t\t\t</div> :\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis.props.onPage === 5 ?\r\n\r\n\t\t\t\t\t\t\t\t\t\t<MainSurvey \r\n\t\t\t\t\t\t\t\t\t\thandleRadio={this.handleRadio.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\thandleInitialSubmit={this.handleInitialSubmit.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tlistQnP={this.props.listQnP}\r\n\t\t\t\t\t\t\t\t\t\tonPage={this.props.onPage}\r\n\t\t\t\t\t\t\t\t\t\tpseudonym={this.props.pseudonym}\r\n\t\t\t\t\t\t\t\t\t\tswitchPage={this.props.switchPage}\r\n\t\t\t\t\t\t\t\t\t\t/> :\r\n\r\n\t\t\t\t\t\t\t\t\t\t<LiveFeed \r\n\t\t\t\t\t\t\t\t\t\tclasses={this.props.classes}\r\n\t\t\t\t\t\t\t            warnClick={this.props.warnClick}\r\n\t\t\t\t\t\t\t            handleHomeClick={this.props.handleHomeClick}\r\n\t\t\t\t\t\t\t            isAdmin={this.props.isAdmin}\r\n\t\t\t\t\t\t\t            listQnP={this.props.listQnP}\r\n\t\t\t\t\t\t\t            liveFeedUpdate={this.props.liveFeedUpdate}\r\n\t\t\t\t\t\t\t            onPage={this.props.onPage}\r\n\t\t\t\t\t\t\t            participantNotify={this.props.participantNotify}\r\n\t\t\t\t\t\t\t            pseudonym={this.props.pseudonym}\r\n\t\t\t\t\t\t\t            switchPage={this.props.switchPage}\r\n\t\t\t\t\t\t\t            total={this.props.total}\r\n\t\t\t\t\t\t\t            totalParticipants={this.props.totalParticipants}\r\n\t\t\t\t\t\t\t            warning={this.props.warning}\r\n\t\t\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  submit: (payload) => dispatch(submit(payload)),\r\n  switchPage: (payload) => dispatch(switchPage(payload)),\r\n  handleHomeClick: () => dispatch(handleHomeClick()),\r\n  warnClick: (payload) => dispatch(warnClick(payload)),\r\n  toggleDialog: (payload) => dispatch(toggleDialog(payload)),\r\n  updateQ: (payload) => dispatch(updateQ(payload)),\r\n  updateInvite: (want, idx) => dispatch(updateInvite(want, idx)),\r\n  updatePseudonym: (payload) => dispatch(updatePseudonym(payload)),\r\n  updateParticipants: (payload) => dispatch(updateParticipants(payload)),\r\n});\r\n\r\nconst LivePoll = ({rootReducer, submit, switchPage, handleHomeClick, warnClick, toggleDialog, updateInvite, updateQ, updatePseudonym, updateParticipants}) => {\r\n\tconst classes = useStyles();\r\n\treturn(\r\n\t\t<LivePollE\r\n\t\tclasses={classes}\r\n\t\tcurrentParticipantClickSerial={rootReducer.currentParticipantClickSerial}\r\n\t\tpseudonym={rootReducer.pseudonym}\r\n\t\tonPage={rootReducer.onPage}\r\n\t\tpolls={rootReducer.polls}\r\n\t\tisAdmin={rootReducer.isAdmin}\r\n\t\tlistParticipants={rootReducer.listParticipants}\r\n\t\tliveFeedUpdate={rootReducer.liveFeedUpdate}\r\n\t\tparticipantNotify={rootReducer.participantNotify}\r\n\t\twarning={rootReducer.warning}\r\n\t\tlistQnP={rootReducer.listQnP}\r\n\t\ttotal={rootReducer.total}\r\n\t\ttotalParticipants={rootReducer.totalParticipants}\r\n\t\twantParticipant={rootReducer.wantParticipant}\r\n\r\n\t\tsubmit={submit}\r\n\t\tswitchPage={switchPage}\r\n\t\thandleHomeClick={handleHomeClick}\r\n\t\twarnClick={warnClick}\r\n\t\ttoggleDialog={toggleDialog}\r\n\t\tupdateInvite={updateInvite}\r\n\t\tupdateQ={updateQ}\r\n\t\tupdatePseudonym={updatePseudonym}\r\n\t\tupdateParticipants={updateParticipants}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LivePoll);","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { updateParticipants, updatePollResult, updateLivePolls, updateLiveFeed,  switchPage, handleLiveFeedUpdate } from './redux/actions'\r\n\r\nimport './App.css';\r\nimport Home from './components/Home/Home.jsx';\r\nimport Poll from './components/Poll/Poll.jsx';\r\nimport LivePoll from './components/Live/LivePoll.jsx';\r\nimport Socket from './redux/Socket';\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    Socket.connect();\r\n    this.attachSocketListeners();\r\n    Socket.emit('add user', '');\r\n    //this.EventEmitter.emit('add user', Math.random().toString(36).substring(7));\r\n  }\r\n  componentWillUnmount() {\r\n    //Socket.emit('forceDisconnect', \"dis\");\r\n  }\r\n\r\n  attachSocketListeners() {\r\n    Socket.on('update live feed', data => this.props.handleLiveFeedUpdate(data));\r\n    Socket.on('live polls', (polls) => this.handleNewPolls(polls));\r\n    Socket.on('update clientListParticipants', list => this.props.updateParticipants(list))\r\n  }\r\n\r\n  handleNewPolls(polls) {\r\n    const newPolls = Object.keys(polls);\r\n    const idx = newPolls.indexOf(this.props.pseudonym);\r\n    let page = this.props.onPage;\r\n    if(idx===-1 && (page===4 || page===5 || page===6)) {\r\n      page = 0;\r\n    }\r\n    this.props.updateLivePolls(polls);\r\n    this.props.switchPage(page);\r\n\r\n    if(page === 0) {\r\n      this.props.updatePollResult({});\r\n      this.props.updateLiveFeed({});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path='/' component={() => <Home /> } exact/>\r\n\r\n          <Route path='/unique' component={() => <Poll/> } />\r\n\r\n          <Route path='/live' component={() => <LivePoll/> } />\r\n\r\n          <Route component={() => { return (<h1 style={{ color: 'red', textAlign: 'center', paddingTop: '40vh' }}>Error 404: Not Found!</h1>) }} />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  pseudonym: state.rootReducer.pseudonym,\r\n  onPage: state.rootReducer.onPage,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateParticipants: (payload) => dispatch(updateParticipants(payload)),\r\n  updateLivePolls: (payload) => dispatch(updateLivePolls(payload)),\r\n  handleLiveFeedUpdate: (payload) => dispatch(handleLiveFeedUpdate(payload)),\r\n  switchPage: (payload) => dispatch(switchPage(payload)),\r\n  updatePollResult: (payload) => dispatch(updatePollResult(payload)),\r\n  updateLiveFeed: (payload) => dispatch(updateLiveFeed(payload)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport Socket from './Socket';\r\n\r\nconst merge = (prev, next) => Object.assign({}, prev, next)\r\n\r\nconst initialState = {\r\n      currentParticipantClickSerial: -1,\r\n      isHomeClick: false,\r\n      isAdmin: 0,\r\n      isPrimaryOpen: false,\r\n      isSecondaryOpen: false,\r\n      listParticipants: {}, \r\n      listQnP: [],\r\n      liveFeedUpdate: {},\r\n      onPage: 0,\r\n      participantName: '',\r\n      participantNotify: false,\r\n      password: '',\r\n      polls: {},\r\n      pollResult: {},\r\n      pseudonym: 'flai',\r\n      secureState: false,\r\n      totalParticipants: 0,\r\n      total: 0,\r\n      wantParticipant: false,\r\n      warning: false,\r\n    }\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'CLICK_WARN':\r\n      return merge(state, {\r\n        liveFeedUpdate: {},\r\n        onPage: 0,\r\n        isAdmin: 0,\r\n      })\r\n\r\n    case 'HOME_CLICK':\r\n      return merge(state, {warning: true})\r\n\r\n    case 'LIVE_FEED_UPDATE':\r\n      return merge(state, {\r\n        liveFeedUpdate: action.payload.update,\r\n        total: action.payload.total,\r\n      })\r\n\r\n    case 'LIVE_POLLS':\r\n      return merge(state, {polls: action.payload})\r\n\r\n    case 'POLLRESULT':\r\n      return merge(state, {pollResult: action.payload})\r\n\r\n    case 'PSEUDONYM':\r\n      Socket.emit('update pseudonym', action.payload)\r\n      return merge(state, {pseudonym: action.payload})\r\n\r\n    case 'REMOVE_ITEM':\r\n      let newQ = state.listQnP;\r\n      newQ.splice(Number(action.payload.index), 1)\r\n      return merge(state, {listQnP: newQ})\r\n\r\n    case 'SUBMIT':\r\n      return handleSubmit(state, action);\r\n\r\n    case 'SWITCH_PAGE':\r\n      return merge(state, {onPage: action.payload})\r\n\r\n    case 'TOGGLE_DIALOG':\r\n      return handleToggle(state, action.payload.surface, action.payload.dialogSwitch);\r\n\r\n    case 'TOGGLE_SWITCH':\r\n      return merge(state, {secureState: !state.secureState})\r\n\r\n    case 'UPDATE_ADMIN':\r\n      return merge(state, {isAdmin: 1, totalParticipants: action.payload})\r\n\r\n    case 'UPDATE_INVITE_SWITCHES':\r\n      return merge(state, {\r\n        wantParticipant: action.payload.want,\r\n        currentParticipantClickSerial: (action.payload.idx? action.payload.idx: state.currentParticipantClickSerial),\r\n      })\r\n\r\n    case 'UPDATE_FEED':\r\n      return merge(state, {liveFeedUpdate: action.payload})\r\n\r\n    case 'UPDATE_LIST':\r\n      return merge(state, {listParticipants: action.payload})\r\n\r\n    case 'UPDATE_Q':\r\n      return merge(state, {listQnP: action.payload})\r\n\r\n    case 'WARN_CLICK':\r\n      return handleWarningClick(state);\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst handleSubmit = (state, action) => {\r\n  Socket.emit('update pollResult', {pseudonym: state.pseudonym, pollResult: action.payload})\r\n  return merge(state, {pollResult: action.payload});\r\n}\r\n\r\nconst handleToggle = (state, surface, dialogSwitch) => {\r\n  if(surface === \"primary\") {\r\n    return merge(state, {isPrimaryOpen: dialogSwitch})\r\n  }\r\n  if(surface === \"secondary\") {\r\n    return merge(state, {isSecondaryOpen: dialogSwitch})\r\n  }\r\n  if(surface === \"warn\")  {\r\n    return merge(state, {warning: dialogSwitch})\r\n  }\r\n}\r\nconst handleWarningClick = (state) => {\r\n  Socket.emit('unpoll', state.pseudonym);\r\n  return merge(state, {\r\n    onPage: 0,\r\n    warning: false,\r\n    isAdmin: 0,\r\n    liveFeedUpdate: {},\r\n  })\r\n}\r\n\r\nconst reducer = combineReducers({\r\n  rootReducer: rootReducer,\r\n})\r\n\r\nexport default reducer\r\n","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport reducer from './reducer'\r\n\r\nconst persistConfig = {\r\n  key: 'airPoll',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\n  /*\r\nconst thunkMiddleware = store => next => action => {\r\n  if (typeof action === 'function') {\r\n    action(store.dispatch)\r\n  } else {\r\n    next(action)\r\n  }\r\n}\r\n*/\r\n\r\nexport const store = createStore(persistedReducer, applyMiddleware(thunk))\r\nexport const persistor = persistStore(store)\r\n\r\n","import { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport {LightTheme, BaseProvider} from 'baseui';\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport {store, persistor} from './redux/store'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\n// 2. Provide the engine to the app\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  \t<PersistGate loading={null} persistor={persistor}>\r\n  \t\t<StyletronProvider value={engine} debug={debug} debugAfterHydration>\r\n\t      <BaseProvider theme={LightTheme}>\r\n\t         <App />\r\n\t      </BaseProvider>\r\n\t  \t</StyletronProvider>\r\n  \t</PersistGate>\r\n  </Provider>, document.getElementById('root')\r\n  );\r\n\r\n/// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}